{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/awesome-qr/lib/qrcode.js","../../node_modules/canvas/lib/parse-font.js","../../node_modules/canvas/browser.js","../../node_modules/js-binary-schema-parser/lib/index.js","../../node_modules/js-binary-schema-parser/lib/parsers/uint8.js","../../node_modules/js-binary-schema-parser/lib/schemas/gif.js","../../node_modules/awesome-qr/lib/gifuct-js/deinterlace.js","../../node_modules/awesome-qr/lib/gifuct-js/lzw.js","../../node_modules/awesome-qr/lib/gifuct-js/index.js","../../node_modules/awesome-qr/lib/gif.js/TypedNeuQuant.js","../../node_modules/awesome-qr/lib/gif.js/LZWEncoder.js","../../node_modules/awesome-qr/lib/gif.js/GIFEncoder.js","../../node_modules/awesome-qr/lib/awesome-qr.js","../../node_modules/awesome-qr/lib/index.js","../../src/CryptoWalletWidget.svelte"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root.host) {\n        return root;\n    }\n    return document;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.40.3' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","\"use strict\";\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n// Re-written in TypeScript by Makito <sumimakito@hotmail.com>\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QRMath = exports.QRUtil = exports.QRMaskPattern = exports.QRErrorCorrectLevel = exports.QRCodeModel = void 0;\nfunction checkQRVersion(version, sText, nCorrectLevel) {\n    var length = _getUTF8Length(sText);\n    var i = version - 1;\n    var nLimit = 0;\n    switch (nCorrectLevel) {\n        case exports.QRErrorCorrectLevel.L:\n            nLimit = QRCodeLimitLength[i][0];\n            break;\n        case exports.QRErrorCorrectLevel.M:\n            nLimit = QRCodeLimitLength[i][1];\n            break;\n        case exports.QRErrorCorrectLevel.Q:\n            nLimit = QRCodeLimitLength[i][2];\n            break;\n        case exports.QRErrorCorrectLevel.H:\n            nLimit = QRCodeLimitLength[i][3];\n            break;\n    }\n    return length <= nLimit;\n}\nfunction _getTypeNumber(sText, nCorrectLevel) {\n    var nType = 1;\n    var length = _getUTF8Length(sText);\n    for (var i = 0, len = QRCodeLimitLength.length; i < len; i++) {\n        var nLimit = 0;\n        switch (nCorrectLevel) {\n            case exports.QRErrorCorrectLevel.L:\n                nLimit = QRCodeLimitLength[i][0];\n                break;\n            case exports.QRErrorCorrectLevel.M:\n                nLimit = QRCodeLimitLength[i][1];\n                break;\n            case exports.QRErrorCorrectLevel.Q:\n                nLimit = QRCodeLimitLength[i][2];\n                break;\n            case exports.QRErrorCorrectLevel.H:\n                nLimit = QRCodeLimitLength[i][3];\n                break;\n        }\n        if (length <= nLimit) {\n            break;\n        }\n        else {\n            nType++;\n        }\n    }\n    if (nType > QRCodeLimitLength.length) {\n        throw new Error(\"Too long data\");\n    }\n    return nType;\n}\nfunction _getUTF8Length(sText) {\n    var replacedText = encodeURI(sText)\n        .toString()\n        .replace(/\\%[0-9a-fA-F]{2}/g, \"a\");\n    return replacedText.length + (replacedText.length != Number(sText) ? 3 : 0);\n}\nvar QR8bitByte = /** @class */ (function () {\n    function QR8bitByte(data) {\n        this.mode = QRMode.MODE_8BIT_BYTE;\n        this.parsedData = [];\n        this.data = data;\n        var byteArrays = [];\n        // Added to support UTF-8 Characters\n        for (var i = 0, l = this.data.length; i < l; i++) {\n            var byteArray = [];\n            var code = this.data.charCodeAt(i);\n            if (code > 0x10000) {\n                byteArray[0] = 0xf0 | ((code & 0x1c0000) >>> 18);\n                byteArray[1] = 0x80 | ((code & 0x3f000) >>> 12);\n                byteArray[2] = 0x80 | ((code & 0xfc0) >>> 6);\n                byteArray[3] = 0x80 | (code & 0x3f);\n            }\n            else if (code > 0x800) {\n                byteArray[0] = 0xe0 | ((code & 0xf000) >>> 12);\n                byteArray[1] = 0x80 | ((code & 0xfc0) >>> 6);\n                byteArray[2] = 0x80 | (code & 0x3f);\n            }\n            else if (code > 0x80) {\n                byteArray[0] = 0xc0 | ((code & 0x7c0) >>> 6);\n                byteArray[1] = 0x80 | (code & 0x3f);\n            }\n            else {\n                byteArray[0] = code;\n            }\n            byteArrays.push(byteArray);\n        }\n        this.parsedData = Array.prototype.concat.apply([], byteArrays);\n        if (this.parsedData.length != this.data.length) {\n            this.parsedData.unshift(191);\n            this.parsedData.unshift(187);\n            this.parsedData.unshift(239);\n        }\n    }\n    QR8bitByte.prototype.getLength = function () {\n        return this.parsedData.length;\n    };\n    QR8bitByte.prototype.write = function (buffer) {\n        for (var i = 0, l = this.parsedData.length; i < l; i++) {\n            buffer.put(this.parsedData[i], 8);\n        }\n    };\n    return QR8bitByte;\n}());\nvar QRCodeModel = /** @class */ (function () {\n    function QRCodeModel(typeNumber, errorCorrectLevel) {\n        if (typeNumber === void 0) { typeNumber = -1; }\n        if (errorCorrectLevel === void 0) { errorCorrectLevel = exports.QRErrorCorrectLevel.L; }\n        this.moduleCount = 0;\n        this.dataList = [];\n        this.typeNumber = typeNumber;\n        this.errorCorrectLevel = errorCorrectLevel;\n        this.moduleCount = 0;\n        this.dataList = [];\n    }\n    QRCodeModel.prototype.addData = function (data) {\n        if (this.typeNumber <= 0) {\n            this.typeNumber = _getTypeNumber(data, this.errorCorrectLevel);\n        }\n        else if (this.typeNumber > 40) {\n            throw new Error(\"Invalid QR version: \" + this.typeNumber);\n        }\n        else {\n            if (!checkQRVersion(this.typeNumber, data, this.errorCorrectLevel)) {\n                throw new Error(\"Data is too long for QR version: \" + this.typeNumber);\n            }\n        }\n        var newData = new QR8bitByte(data);\n        this.dataList.push(newData);\n        this.dataCache = undefined;\n    };\n    QRCodeModel.prototype.isDark = function (row, col) {\n        if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n            throw new Error(row + \",\" + col);\n        }\n        return this.modules[row][col];\n    };\n    QRCodeModel.prototype.getModuleCount = function () {\n        return this.moduleCount;\n    };\n    QRCodeModel.prototype.make = function () {\n        this.makeImpl(false, this.getBestMaskPattern());\n    };\n    QRCodeModel.prototype.makeImpl = function (test, maskPattern) {\n        this.moduleCount = this.typeNumber * 4 + 17;\n        this.modules = new Array(this.moduleCount);\n        for (var row = 0; row < this.moduleCount; row++) {\n            this.modules[row] = new Array(this.moduleCount);\n            for (var col = 0; col < this.moduleCount; col++) {\n                this.modules[row][col] = null;\n            }\n        }\n        this.setupPositionProbePattern(0, 0);\n        this.setupPositionProbePattern(this.moduleCount - 7, 0);\n        this.setupPositionProbePattern(0, this.moduleCount - 7);\n        this.setupPositionAdjustPattern();\n        this.setupTimingPattern();\n        this.setupTypeInfo(test, maskPattern);\n        if (this.typeNumber >= 7) {\n            this.setupTypeNumber(test);\n        }\n        if (this.dataCache == null) {\n            this.dataCache = QRCodeModel.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n        }\n        this.mapData(this.dataCache, maskPattern);\n    };\n    QRCodeModel.prototype.setupPositionProbePattern = function (row, col) {\n        for (var r = -1; r <= 7; r++) {\n            if (row + r <= -1 || this.moduleCount <= row + r)\n                continue;\n            for (var c = -1; c <= 7; c++) {\n                if (col + c <= -1 || this.moduleCount <= col + c)\n                    continue;\n                if ((0 <= r && r <= 6 && (c == 0 || c == 6)) ||\n                    (0 <= c && c <= 6 && (r == 0 || r == 6)) ||\n                    (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\n                    this.modules[row + r][col + c] = true;\n                }\n                else {\n                    this.modules[row + r][col + c] = false;\n                }\n            }\n        }\n    };\n    QRCodeModel.prototype.getBestMaskPattern = function () {\n        if (Number.isInteger(this.maskPattern) && Object.values(exports.QRMaskPattern).includes(this.maskPattern)) {\n            return this.maskPattern;\n        }\n        var minLostPoint = 0;\n        var pattern = 0;\n        for (var i = 0; i < 8; i++) {\n            this.makeImpl(true, i);\n            var lostPoint = QRUtil.getLostPoint(this);\n            if (i == 0 || minLostPoint > lostPoint) {\n                minLostPoint = lostPoint;\n                pattern = i;\n            }\n        }\n        return pattern;\n    };\n    QRCodeModel.prototype.setupTimingPattern = function () {\n        for (var r = 8; r < this.moduleCount - 8; r++) {\n            if (this.modules[r][6] != null) {\n                continue;\n            }\n            this.modules[r][6] = r % 2 == 0;\n        }\n        for (var c = 8; c < this.moduleCount - 8; c++) {\n            if (this.modules[6][c] != null) {\n                continue;\n            }\n            this.modules[6][c] = c % 2 == 0;\n        }\n    };\n    QRCodeModel.prototype.setupPositionAdjustPattern = function () {\n        var pos = QRUtil.getPatternPosition(this.typeNumber);\n        for (var i = 0; i < pos.length; i++) {\n            for (var j = 0; j < pos.length; j++) {\n                var row = pos[i];\n                var col = pos[j];\n                if (this.modules[row][col] != null) {\n                    continue;\n                }\n                for (var r = -2; r <= 2; r++) {\n                    for (var c = -2; c <= 2; c++) {\n                        if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {\n                            this.modules[row + r][col + c] = true;\n                        }\n                        else {\n                            this.modules[row + r][col + c] = false;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    QRCodeModel.prototype.setupTypeNumber = function (test) {\n        var bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n        for (var i = 0; i < 18; i++) {\n            var mod = !test && ((bits >> i) & 1) == 1;\n            this.modules[Math.floor(i / 3)][(i % 3) + this.moduleCount - 8 - 3] = mod;\n        }\n        for (var i = 0; i < 18; i++) {\n            var mod = !test && ((bits >> i) & 1) == 1;\n            this.modules[(i % 3) + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n        }\n    };\n    QRCodeModel.prototype.setupTypeInfo = function (test, maskPattern) {\n        var data = (this.errorCorrectLevel << 3) | maskPattern;\n        var bits = QRUtil.getBCHTypeInfo(data);\n        for (var i = 0; i < 15; i++) {\n            var mod = !test && ((bits >> i) & 1) == 1;\n            if (i < 6) {\n                this.modules[i][8] = mod;\n            }\n            else if (i < 8) {\n                this.modules[i + 1][8] = mod;\n            }\n            else {\n                this.modules[this.moduleCount - 15 + i][8] = mod;\n            }\n        }\n        for (var i = 0; i < 15; i++) {\n            var mod = !test && ((bits >> i) & 1) == 1;\n            if (i < 8) {\n                this.modules[8][this.moduleCount - i - 1] = mod;\n            }\n            else if (i < 9) {\n                this.modules[8][15 - i - 1 + 1] = mod;\n            }\n            else {\n                this.modules[8][15 - i - 1] = mod;\n            }\n        }\n        this.modules[this.moduleCount - 8][8] = !test;\n    };\n    QRCodeModel.prototype.mapData = function (data, maskPattern) {\n        var inc = -1;\n        var row = this.moduleCount - 1;\n        var bitIndex = 7;\n        var byteIndex = 0;\n        for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n            if (col == 6)\n                col--;\n            while (true) {\n                for (var c = 0; c < 2; c++) {\n                    if (this.modules[row][col - c] == null) {\n                        var dark = false;\n                        if (byteIndex < data.length) {\n                            dark = ((data[byteIndex] >>> bitIndex) & 1) == 1;\n                        }\n                        var mask = QRUtil.getMask(maskPattern, row, col - c);\n                        if (mask) {\n                            dark = !dark;\n                        }\n                        this.modules[row][col - c] = dark;\n                        bitIndex--;\n                        if (bitIndex == -1) {\n                            byteIndex++;\n                            bitIndex = 7;\n                        }\n                    }\n                }\n                row += inc;\n                if (row < 0 || this.moduleCount <= row) {\n                    row -= inc;\n                    inc = -inc;\n                    break;\n                }\n            }\n        }\n    };\n    QRCodeModel.createData = function (typeNumber, errorCorrectLevel, dataList) {\n        var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n        var buffer = new QRBitBuffer();\n        for (var i = 0; i < dataList.length; i++) {\n            var data = dataList[i];\n            buffer.put(data.mode, 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n            data.write(buffer);\n        }\n        var totalDataCount = 0;\n        for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n        }\n        if (buffer.getLengthInBits() > totalDataCount * 8) {\n            throw new Error(\"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\");\n        }\n        if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n            buffer.put(0, 4);\n        }\n        while (buffer.getLengthInBits() % 8 != 0) {\n            buffer.putBit(false);\n        }\n        while (true) {\n            if (buffer.getLengthInBits() >= totalDataCount * 8) {\n                break;\n            }\n            buffer.put(QRCodeModel.PAD0, 8);\n            if (buffer.getLengthInBits() >= totalDataCount * 8) {\n                break;\n            }\n            buffer.put(QRCodeModel.PAD1, 8);\n        }\n        return QRCodeModel.createBytes(buffer, rsBlocks);\n    };\n    QRCodeModel.createBytes = function (buffer, rsBlocks) {\n        var offset = 0;\n        var maxDcCount = 0;\n        var maxEcCount = 0;\n        var dcdata = new Array(rsBlocks.length);\n        var ecdata = new Array(rsBlocks.length);\n        for (var r = 0; r < rsBlocks.length; r++) {\n            var dcCount = rsBlocks[r].dataCount;\n            var ecCount = rsBlocks[r].totalCount - dcCount;\n            maxDcCount = Math.max(maxDcCount, dcCount);\n            maxEcCount = Math.max(maxEcCount, ecCount);\n            dcdata[r] = new Array(dcCount);\n            for (var i = 0; i < dcdata[r].length; i++) {\n                dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n            }\n            offset += dcCount;\n            var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n            var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n            var modPoly = rawPoly.mod(rsPoly);\n            ecdata[r] = new Array(rsPoly.getLength() - 1);\n            for (var i = 0; i < ecdata[r].length; i++) {\n                var modIndex = i + modPoly.getLength() - ecdata[r].length;\n                ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n            }\n        }\n        var totalCodeCount = 0;\n        for (var i = 0; i < rsBlocks.length; i++) {\n            totalCodeCount += rsBlocks[i].totalCount;\n        }\n        var data = new Array(totalCodeCount);\n        var index = 0;\n        for (var i = 0; i < maxDcCount; i++) {\n            for (var r = 0; r < rsBlocks.length; r++) {\n                if (i < dcdata[r].length) {\n                    data[index++] = dcdata[r][i];\n                }\n            }\n        }\n        for (var i = 0; i < maxEcCount; i++) {\n            for (var r = 0; r < rsBlocks.length; r++) {\n                if (i < ecdata[r].length) {\n                    data[index++] = ecdata[r][i];\n                }\n            }\n        }\n        return data;\n    };\n    QRCodeModel.PAD0 = 0xec;\n    QRCodeModel.PAD1 = 0x11;\n    return QRCodeModel;\n}());\nexports.QRCodeModel = QRCodeModel;\nexports.QRErrorCorrectLevel = { L: 1, M: 0, Q: 3, H: 2 };\nvar QRMode = { MODE_NUMBER: 1 << 0, MODE_ALPHA_NUM: 1 << 1, MODE_8BIT_BYTE: 1 << 2, MODE_KANJI: 1 << 3 };\nexports.QRMaskPattern = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7,\n};\nvar QRUtil = /** @class */ (function () {\n    function QRUtil() {\n    }\n    QRUtil.getBCHTypeInfo = function (data) {\n        var d = data << 10;\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n            d ^= QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15));\n        }\n        return ((data << 10) | d) ^ QRUtil.G15_MASK;\n    };\n    QRUtil.getBCHTypeNumber = function (data) {\n        var d = data << 12;\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n            d ^= QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18));\n        }\n        return (data << 12) | d;\n    };\n    QRUtil.getBCHDigit = function (data) {\n        var digit = 0;\n        while (data != 0) {\n            digit++;\n            data >>>= 1;\n        }\n        return digit;\n    };\n    QRUtil.getPatternPosition = function (typeNumber) {\n        return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n    QRUtil.getMask = function (maskPattern, i, j) {\n        switch (maskPattern) {\n            case exports.QRMaskPattern.PATTERN000:\n                return (i + j) % 2 == 0;\n            case exports.QRMaskPattern.PATTERN001:\n                return i % 2 == 0;\n            case exports.QRMaskPattern.PATTERN010:\n                return j % 3 == 0;\n            case exports.QRMaskPattern.PATTERN011:\n                return (i + j) % 3 == 0;\n            case exports.QRMaskPattern.PATTERN100:\n                return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n            case exports.QRMaskPattern.PATTERN101:\n                return ((i * j) % 2) + ((i * j) % 3) == 0;\n            case exports.QRMaskPattern.PATTERN110:\n                return (((i * j) % 2) + ((i * j) % 3)) % 2 == 0;\n            case exports.QRMaskPattern.PATTERN111:\n                return (((i * j) % 3) + ((i + j) % 2)) % 2 == 0;\n            default:\n                throw new Error(\"bad maskPattern:\" + maskPattern);\n        }\n    };\n    QRUtil.getErrorCorrectPolynomial = function (errorCorrectLength) {\n        var a = new QRPolynomial([1], 0);\n        for (var i = 0; i < errorCorrectLength; i++) {\n            a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n        }\n        return a;\n    };\n    QRUtil.getLengthInBits = function (mode, type) {\n        if (1 <= type && type < 10) {\n            switch (mode) {\n                case QRMode.MODE_NUMBER:\n                    return 10;\n                case QRMode.MODE_ALPHA_NUM:\n                    return 9;\n                case QRMode.MODE_8BIT_BYTE:\n                    return 8;\n                case QRMode.MODE_KANJI:\n                    return 8;\n                default:\n                    throw new Error(\"mode:\" + mode);\n            }\n        }\n        else if (type < 27) {\n            switch (mode) {\n                case QRMode.MODE_NUMBER:\n                    return 12;\n                case QRMode.MODE_ALPHA_NUM:\n                    return 11;\n                case QRMode.MODE_8BIT_BYTE:\n                    return 16;\n                case QRMode.MODE_KANJI:\n                    return 10;\n                default:\n                    throw new Error(\"mode:\" + mode);\n            }\n        }\n        else if (type < 41) {\n            switch (mode) {\n                case QRMode.MODE_NUMBER:\n                    return 14;\n                case QRMode.MODE_ALPHA_NUM:\n                    return 13;\n                case QRMode.MODE_8BIT_BYTE:\n                    return 16;\n                case QRMode.MODE_KANJI:\n                    return 12;\n                default:\n                    throw new Error(\"mode:\" + mode);\n            }\n        }\n        else {\n            throw new Error(\"type:\" + type);\n        }\n    };\n    QRUtil.getLostPoint = function (qrCode) {\n        var moduleCount = qrCode.getModuleCount();\n        var lostPoint = 0;\n        for (var row = 0; row < moduleCount; row++) {\n            for (var col = 0; col < moduleCount; col++) {\n                var sameCount = 0;\n                var dark = qrCode.isDark(row, col);\n                for (var r = -1; r <= 1; r++) {\n                    if (row + r < 0 || moduleCount <= row + r) {\n                        continue;\n                    }\n                    for (var c = -1; c <= 1; c++) {\n                        if (col + c < 0 || moduleCount <= col + c) {\n                            continue;\n                        }\n                        if (r == 0 && c == 0) {\n                            continue;\n                        }\n                        if (dark == qrCode.isDark(row + r, col + c)) {\n                            sameCount++;\n                        }\n                    }\n                }\n                if (sameCount > 5) {\n                    lostPoint += 3 + sameCount - 5;\n                }\n            }\n        }\n        for (var row = 0; row < moduleCount - 1; row++) {\n            for (var col = 0; col < moduleCount - 1; col++) {\n                var count = 0;\n                if (qrCode.isDark(row, col))\n                    count++;\n                if (qrCode.isDark(row + 1, col))\n                    count++;\n                if (qrCode.isDark(row, col + 1))\n                    count++;\n                if (qrCode.isDark(row + 1, col + 1))\n                    count++;\n                if (count == 0 || count == 4) {\n                    lostPoint += 3;\n                }\n            }\n        }\n        for (var row = 0; row < moduleCount; row++) {\n            for (var col = 0; col < moduleCount - 6; col++) {\n                if (qrCode.isDark(row, col) &&\n                    !qrCode.isDark(row, col + 1) &&\n                    qrCode.isDark(row, col + 2) &&\n                    qrCode.isDark(row, col + 3) &&\n                    qrCode.isDark(row, col + 4) &&\n                    !qrCode.isDark(row, col + 5) &&\n                    qrCode.isDark(row, col + 6)) {\n                    lostPoint += 40;\n                }\n            }\n        }\n        for (var col = 0; col < moduleCount; col++) {\n            for (var row = 0; row < moduleCount - 6; row++) {\n                if (qrCode.isDark(row, col) &&\n                    !qrCode.isDark(row + 1, col) &&\n                    qrCode.isDark(row + 2, col) &&\n                    qrCode.isDark(row + 3, col) &&\n                    qrCode.isDark(row + 4, col) &&\n                    !qrCode.isDark(row + 5, col) &&\n                    qrCode.isDark(row + 6, col)) {\n                    lostPoint += 40;\n                }\n            }\n        }\n        var darkCount = 0;\n        for (var col = 0; col < moduleCount; col++) {\n            for (var row = 0; row < moduleCount; row++) {\n                if (qrCode.isDark(row, col)) {\n                    darkCount++;\n                }\n            }\n        }\n        var ratio = Math.abs((100 * darkCount) / moduleCount / moduleCount - 50) / 5;\n        lostPoint += ratio * 10;\n        return lostPoint;\n    };\n    QRUtil.PATTERN_POSITION_TABLE = [\n        [],\n        [6, 18],\n        [6, 22],\n        [6, 26],\n        [6, 30],\n        [6, 34],\n        [6, 22, 38],\n        [6, 24, 42],\n        [6, 26, 46],\n        [6, 28, 50],\n        [6, 30, 54],\n        [6, 32, 58],\n        [6, 34, 62],\n        [6, 26, 46, 66],\n        [6, 26, 48, 70],\n        [6, 26, 50, 74],\n        [6, 30, 54, 78],\n        [6, 30, 56, 82],\n        [6, 30, 58, 86],\n        [6, 34, 62, 90],\n        [6, 28, 50, 72, 94],\n        [6, 26, 50, 74, 98],\n        [6, 30, 54, 78, 102],\n        [6, 28, 54, 80, 106],\n        [6, 32, 58, 84, 110],\n        [6, 30, 58, 86, 114],\n        [6, 34, 62, 90, 118],\n        [6, 26, 50, 74, 98, 122],\n        [6, 30, 54, 78, 102, 126],\n        [6, 26, 52, 78, 104, 130],\n        [6, 30, 56, 82, 108, 134],\n        [6, 34, 60, 86, 112, 138],\n        [6, 30, 58, 86, 114, 142],\n        [6, 34, 62, 90, 118, 146],\n        [6, 30, 54, 78, 102, 126, 150],\n        [6, 24, 50, 76, 102, 128, 154],\n        [6, 28, 54, 80, 106, 132, 158],\n        [6, 32, 58, 84, 110, 136, 162],\n        [6, 26, 54, 82, 110, 138, 166],\n        [6, 30, 58, 86, 114, 142, 170],\n    ];\n    QRUtil.G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n    QRUtil.G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    QRUtil.G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n    return QRUtil;\n}());\nexports.QRUtil = QRUtil;\nvar QRMath = /** @class */ (function () {\n    function QRMath() {\n    }\n    QRMath.glog = function (n) {\n        if (n < 1) {\n            throw new Error(\"glog(\" + n + \")\");\n        }\n        return QRMath.LOG_TABLE[n];\n    };\n    QRMath.gexp = function (n) {\n        while (n < 0) {\n            n += 255;\n        }\n        while (n >= 256) {\n            n -= 255;\n        }\n        return QRMath.EXP_TABLE[n];\n    };\n    QRMath.EXP_TABLE = new Array(256);\n    QRMath.LOG_TABLE = new Array(256);\n    QRMath._constructor = (function () {\n        for (var i = 0; i < 8; i++) {\n            QRMath.EXP_TABLE[i] = 1 << i;\n        }\n        for (var i = 8; i < 256; i++) {\n            QRMath.EXP_TABLE[i] =\n                QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\n        }\n        for (var i = 0; i < 255; i++) {\n            QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n        }\n    })();\n    return QRMath;\n}());\nexports.QRMath = QRMath;\nvar QRPolynomial = /** @class */ (function () {\n    function QRPolynomial(num, shift) {\n        if (num.length == undefined) {\n            throw new Error(num.length + \"/\" + shift);\n        }\n        var offset = 0;\n        while (offset < num.length && num[offset] == 0) {\n            offset++;\n        }\n        this.num = new Array(num.length - offset + shift);\n        for (var i = 0; i < num.length - offset; i++) {\n            this.num[i] = num[i + offset];\n        }\n    }\n    QRPolynomial.prototype.get = function (index) {\n        return this.num[index];\n    };\n    QRPolynomial.prototype.getLength = function () {\n        return this.num.length;\n    };\n    QRPolynomial.prototype.multiply = function (e) {\n        var num = new Array(this.getLength() + e.getLength() - 1);\n        for (var i = 0; i < this.getLength(); i++) {\n            for (var j = 0; j < e.getLength(); j++) {\n                num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n            }\n        }\n        return new QRPolynomial(num, 0);\n    };\n    QRPolynomial.prototype.mod = function (e) {\n        if (this.getLength() - e.getLength() < 0) {\n            return this;\n        }\n        var ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n        var num = new Array(this.getLength());\n        for (var i = 0; i < this.getLength(); i++) {\n            num[i] = this.get(i);\n        }\n        for (var i = 0; i < e.getLength(); i++) {\n            num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n        }\n        return new QRPolynomial(num, 0).mod(e);\n    };\n    return QRPolynomial;\n}());\nvar QRRSBlock = /** @class */ (function () {\n    function QRRSBlock(totalCount, dataCount) {\n        this.totalCount = totalCount;\n        this.dataCount = dataCount;\n    }\n    QRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\n        var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n        if (rsBlock == undefined) {\n            throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n        }\n        var length = rsBlock.length / 3;\n        var list = [];\n        for (var i = 0; i < length; i++) {\n            var count = rsBlock[i * 3 + 0];\n            var totalCount = rsBlock[i * 3 + 1];\n            var dataCount = rsBlock[i * 3 + 2];\n            for (var j = 0; j < count; j++) {\n                list.push(new QRRSBlock(totalCount, dataCount));\n            }\n        }\n        return list;\n    };\n    QRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\n        switch (errorCorrectLevel) {\n            case exports.QRErrorCorrectLevel.L:\n                return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n            case exports.QRErrorCorrectLevel.M:\n                return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n            case exports.QRErrorCorrectLevel.Q:\n                return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n            case exports.QRErrorCorrectLevel.H:\n                return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n            default:\n                return undefined;\n        }\n    };\n    QRRSBlock.RS_BLOCK_TABLE = [\n        [1, 26, 19],\n        [1, 26, 16],\n        [1, 26, 13],\n        [1, 26, 9],\n        [1, 44, 34],\n        [1, 44, 28],\n        [1, 44, 22],\n        [1, 44, 16],\n        [1, 70, 55],\n        [1, 70, 44],\n        [2, 35, 17],\n        [2, 35, 13],\n        [1, 100, 80],\n        [2, 50, 32],\n        [2, 50, 24],\n        [4, 25, 9],\n        [1, 134, 108],\n        [2, 67, 43],\n        [2, 33, 15, 2, 34, 16],\n        [2, 33, 11, 2, 34, 12],\n        [2, 86, 68],\n        [4, 43, 27],\n        [4, 43, 19],\n        [4, 43, 15],\n        [2, 98, 78],\n        [4, 49, 31],\n        [2, 32, 14, 4, 33, 15],\n        [4, 39, 13, 1, 40, 14],\n        [2, 121, 97],\n        [2, 60, 38, 2, 61, 39],\n        [4, 40, 18, 2, 41, 19],\n        [4, 40, 14, 2, 41, 15],\n        [2, 146, 116],\n        [3, 58, 36, 2, 59, 37],\n        [4, 36, 16, 4, 37, 17],\n        [4, 36, 12, 4, 37, 13],\n        [2, 86, 68, 2, 87, 69],\n        [4, 69, 43, 1, 70, 44],\n        [6, 43, 19, 2, 44, 20],\n        [6, 43, 15, 2, 44, 16],\n        [4, 101, 81],\n        [1, 80, 50, 4, 81, 51],\n        [4, 50, 22, 4, 51, 23],\n        [3, 36, 12, 8, 37, 13],\n        [2, 116, 92, 2, 117, 93],\n        [6, 58, 36, 2, 59, 37],\n        [4, 46, 20, 6, 47, 21],\n        [7, 42, 14, 4, 43, 15],\n        [4, 133, 107],\n        [8, 59, 37, 1, 60, 38],\n        [8, 44, 20, 4, 45, 21],\n        [12, 33, 11, 4, 34, 12],\n        [3, 145, 115, 1, 146, 116],\n        [4, 64, 40, 5, 65, 41],\n        [11, 36, 16, 5, 37, 17],\n        [11, 36, 12, 5, 37, 13],\n        [5, 109, 87, 1, 110, 88],\n        [5, 65, 41, 5, 66, 42],\n        [5, 54, 24, 7, 55, 25],\n        [11, 36, 12],\n        [5, 122, 98, 1, 123, 99],\n        [7, 73, 45, 3, 74, 46],\n        [15, 43, 19, 2, 44, 20],\n        [3, 45, 15, 13, 46, 16],\n        [1, 135, 107, 5, 136, 108],\n        [10, 74, 46, 1, 75, 47],\n        [1, 50, 22, 15, 51, 23],\n        [2, 42, 14, 17, 43, 15],\n        [5, 150, 120, 1, 151, 121],\n        [9, 69, 43, 4, 70, 44],\n        [17, 50, 22, 1, 51, 23],\n        [2, 42, 14, 19, 43, 15],\n        [3, 141, 113, 4, 142, 114],\n        [3, 70, 44, 11, 71, 45],\n        [17, 47, 21, 4, 48, 22],\n        [9, 39, 13, 16, 40, 14],\n        [3, 135, 107, 5, 136, 108],\n        [3, 67, 41, 13, 68, 42],\n        [15, 54, 24, 5, 55, 25],\n        [15, 43, 15, 10, 44, 16],\n        [4, 144, 116, 4, 145, 117],\n        [17, 68, 42],\n        [17, 50, 22, 6, 51, 23],\n        [19, 46, 16, 6, 47, 17],\n        [2, 139, 111, 7, 140, 112],\n        [17, 74, 46],\n        [7, 54, 24, 16, 55, 25],\n        [34, 37, 13],\n        [4, 151, 121, 5, 152, 122],\n        [4, 75, 47, 14, 76, 48],\n        [11, 54, 24, 14, 55, 25],\n        [16, 45, 15, 14, 46, 16],\n        [6, 147, 117, 4, 148, 118],\n        [6, 73, 45, 14, 74, 46],\n        [11, 54, 24, 16, 55, 25],\n        [30, 46, 16, 2, 47, 17],\n        [8, 132, 106, 4, 133, 107],\n        [8, 75, 47, 13, 76, 48],\n        [7, 54, 24, 22, 55, 25],\n        [22, 45, 15, 13, 46, 16],\n        [10, 142, 114, 2, 143, 115],\n        [19, 74, 46, 4, 75, 47],\n        [28, 50, 22, 6, 51, 23],\n        [33, 46, 16, 4, 47, 17],\n        [8, 152, 122, 4, 153, 123],\n        [22, 73, 45, 3, 74, 46],\n        [8, 53, 23, 26, 54, 24],\n        [12, 45, 15, 28, 46, 16],\n        [3, 147, 117, 10, 148, 118],\n        [3, 73, 45, 23, 74, 46],\n        [4, 54, 24, 31, 55, 25],\n        [11, 45, 15, 31, 46, 16],\n        [7, 146, 116, 7, 147, 117],\n        [21, 73, 45, 7, 74, 46],\n        [1, 53, 23, 37, 54, 24],\n        [19, 45, 15, 26, 46, 16],\n        [5, 145, 115, 10, 146, 116],\n        [19, 75, 47, 10, 76, 48],\n        [15, 54, 24, 25, 55, 25],\n        [23, 45, 15, 25, 46, 16],\n        [13, 145, 115, 3, 146, 116],\n        [2, 74, 46, 29, 75, 47],\n        [42, 54, 24, 1, 55, 25],\n        [23, 45, 15, 28, 46, 16],\n        [17, 145, 115],\n        [10, 74, 46, 23, 75, 47],\n        [10, 54, 24, 35, 55, 25],\n        [19, 45, 15, 35, 46, 16],\n        [17, 145, 115, 1, 146, 116],\n        [14, 74, 46, 21, 75, 47],\n        [29, 54, 24, 19, 55, 25],\n        [11, 45, 15, 46, 46, 16],\n        [13, 145, 115, 6, 146, 116],\n        [14, 74, 46, 23, 75, 47],\n        [44, 54, 24, 7, 55, 25],\n        [59, 46, 16, 1, 47, 17],\n        [12, 151, 121, 7, 152, 122],\n        [12, 75, 47, 26, 76, 48],\n        [39, 54, 24, 14, 55, 25],\n        [22, 45, 15, 41, 46, 16],\n        [6, 151, 121, 14, 152, 122],\n        [6, 75, 47, 34, 76, 48],\n        [46, 54, 24, 10, 55, 25],\n        [2, 45, 15, 64, 46, 16],\n        [17, 152, 122, 4, 153, 123],\n        [29, 74, 46, 14, 75, 47],\n        [49, 54, 24, 10, 55, 25],\n        [24, 45, 15, 46, 46, 16],\n        [4, 152, 122, 18, 153, 123],\n        [13, 74, 46, 32, 75, 47],\n        [48, 54, 24, 14, 55, 25],\n        [42, 45, 15, 32, 46, 16],\n        [20, 147, 117, 4, 148, 118],\n        [40, 75, 47, 7, 76, 48],\n        [43, 54, 24, 22, 55, 25],\n        [10, 45, 15, 67, 46, 16],\n        [19, 148, 118, 6, 149, 119],\n        [18, 75, 47, 31, 76, 48],\n        [34, 54, 24, 34, 55, 25],\n        [20, 45, 15, 61, 46, 16],\n    ];\n    return QRRSBlock;\n}());\nvar QRBitBuffer = /** @class */ (function () {\n    function QRBitBuffer() {\n        this.buffer = [];\n        this.length = 0;\n    }\n    QRBitBuffer.prototype.get = function (index) {\n        var bufIndex = Math.floor(index / 8);\n        return ((this.buffer[bufIndex] >>> (7 - (index % 8))) & 1) == 1;\n    };\n    QRBitBuffer.prototype.put = function (num, length) {\n        for (var i = 0; i < length; i++) {\n            this.putBit(((num >>> (length - i - 1)) & 1) == 1);\n        }\n    };\n    QRBitBuffer.prototype.getLengthInBits = function () {\n        return this.length;\n    };\n    QRBitBuffer.prototype.putBit = function (bit) {\n        var bufIndex = Math.floor(this.length / 8);\n        if (this.buffer.length <= bufIndex) {\n            this.buffer.push(0);\n        }\n        if (bit) {\n            this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n        }\n        this.length++;\n    };\n    return QRBitBuffer;\n}());\nvar QRCodeLimitLength = [\n    [17, 14, 11, 7],\n    [32, 26, 20, 14],\n    [53, 42, 32, 24],\n    [78, 62, 46, 34],\n    [106, 84, 60, 44],\n    [134, 106, 74, 58],\n    [154, 122, 86, 64],\n    [192, 152, 108, 84],\n    [230, 180, 130, 98],\n    [271, 213, 151, 119],\n    [321, 251, 177, 137],\n    [367, 287, 203, 155],\n    [425, 331, 241, 177],\n    [458, 362, 258, 194],\n    [520, 412, 292, 220],\n    [586, 450, 322, 250],\n    [644, 504, 364, 280],\n    [718, 560, 394, 310],\n    [792, 624, 442, 338],\n    [858, 666, 482, 382],\n    [929, 711, 509, 403],\n    [1003, 779, 565, 439],\n    [1091, 857, 611, 461],\n    [1171, 911, 661, 511],\n    [1273, 997, 715, 535],\n    [1367, 1059, 751, 593],\n    [1465, 1125, 805, 625],\n    [1528, 1190, 868, 658],\n    [1628, 1264, 908, 698],\n    [1732, 1370, 982, 742],\n    [1840, 1452, 1030, 790],\n    [1952, 1538, 1112, 842],\n    [2068, 1628, 1168, 898],\n    [2188, 1722, 1228, 958],\n    [2303, 1809, 1283, 983],\n    [2431, 1911, 1351, 1051],\n    [2563, 1989, 1423, 1093],\n    [2699, 2099, 1499, 1139],\n    [2809, 2213, 1579, 1219],\n    [2953, 2331, 1663, 1273],\n];\n","'use strict'\n\n/**\n * Font RegExp helpers.\n */\n\nconst weights = 'bold|bolder|lighter|[1-9]00'\n  , styles = 'italic|oblique'\n  , variants = 'small-caps'\n  , stretches = 'ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded'\n  , units = 'px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q'\n  , string = '\\'([^\\']+)\\'|\"([^\"]+)\"|[\\\\w\\\\s-]+'\n\n// [ [ <‘font-style’> || <font-variant-css21> || <‘font-weight’> || <‘font-stretch’> ]?\n//    <‘font-size’> [ / <‘line-height’> ]? <‘font-family’> ]\n// https://drafts.csswg.org/css-fonts-3/#font-prop\nconst weightRe = new RegExp('(' + weights + ') +', 'i')\nconst styleRe = new RegExp('(' + styles + ') +', 'i')\nconst variantRe = new RegExp('(' + variants + ') +', 'i')\nconst stretchRe = new RegExp('(' + stretches + ') +', 'i')\nconst sizeFamilyRe = new RegExp(\n  '([\\\\d\\\\.]+)(' + units + ') *'\n  + '((?:' + string + ')( *, *(?:' + string + '))*)')\n\n/**\n * Cache font parsing.\n */\n\nconst cache = {}\n\nconst defaultHeight = 16 // pt, common browser default\n\n/**\n * Parse font `str`.\n *\n * @param {String} str\n * @return {Object} Parsed font. `size` is in device units. `unit` is the unit\n *   appearing in the input string.\n * @api private\n */\n\nmodule.exports = function (str) {\n  // Cached\n  if (cache[str]) return cache[str]\n\n  // Try for required properties first.\n  const sizeFamily = sizeFamilyRe.exec(str)\n  if (!sizeFamily) return // invalid\n\n  // Default values and required properties\n  const font = {\n    weight: 'normal',\n    style: 'normal',\n    stretch: 'normal',\n    variant: 'normal',\n    size: parseFloat(sizeFamily[1]),\n    unit: sizeFamily[2],\n    family: sizeFamily[3].replace(/[\"']/g, '').replace(/ *, */g, ',')\n  }\n\n  // Optional, unordered properties.\n  let weight, style, variant, stretch\n  // Stop search at `sizeFamily.index`\n  let substr = str.substring(0, sizeFamily.index)\n  if ((weight = weightRe.exec(substr))) font.weight = weight[1]\n  if ((style = styleRe.exec(substr))) font.style = style[1]\n  if ((variant = variantRe.exec(substr))) font.variant = variant[1]\n  if ((stretch = stretchRe.exec(substr))) font.stretch = stretch[1]\n\n  // Convert to device units. (`font.unit` is the original unit)\n  // TODO: ch, ex\n  switch (font.unit) {\n    case 'pt':\n      font.size /= 0.75\n      break\n    case 'pc':\n      font.size *= 16\n      break\n    case 'in':\n      font.size *= 96\n      break\n    case 'cm':\n      font.size *= 96.0 / 2.54\n      break\n    case 'mm':\n      font.size *= 96.0 / 25.4\n      break\n    case '%':\n      // TODO disabled because existing unit tests assume 100\n      // font.size *= defaultHeight / 100 / 0.75\n      break\n    case 'em':\n    case 'rem':\n      font.size *= defaultHeight / 0.75\n      break\n    case 'q':\n      font.size *= 96 / 25.4 / 4\n      break\n  }\n\n  return (cache[str] = font)\n}\n","/* globals document, ImageData */\n\nconst parseFont = require('./lib/parse-font')\n\nexports.parseFont = parseFont\n\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), { width: width, height: height })\n}\n\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0: return new ImageData()\n    case 1: return new ImageData(array)\n    case 2: return new ImageData(array, width)\n    default: return new ImageData(array, width, height)\n  }\n}\n\nexports.loadImage = function (src, options) {\n  return new Promise(function (resolve, reject) {\n    const image = Object.assign(document.createElement('img'), options)\n\n    function cleanup () {\n      image.onload = null\n      image.onerror = null\n    }\n\n    image.onload = function () { cleanup(); resolve(image) }\n    image.onerror = function () { cleanup(); reject(new Error('Failed to load the image \"' + src + '\"')) }\n\n    image.src = src\n  })\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loop = exports.conditional = exports.parse = void 0;\n\nvar parse = function parse(stream, schema) {\n  var result = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var parent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : result;\n\n  if (Array.isArray(schema)) {\n    schema.forEach(function (partSchema) {\n      return parse(stream, partSchema, result, parent);\n    });\n  } else if (typeof schema === 'function') {\n    schema(stream, result, parent, parse);\n  } else {\n    var key = Object.keys(schema)[0];\n\n    if (Array.isArray(schema[key])) {\n      parent[key] = {};\n      parse(stream, schema[key], result, parent[key]);\n    } else {\n      parent[key] = schema[key](stream, result, parent, parse);\n    }\n  }\n\n  return result;\n};\n\nexports.parse = parse;\n\nvar conditional = function conditional(schema, conditionFunc) {\n  return function (stream, result, parent, parse) {\n    if (conditionFunc(stream, result, parent)) {\n      parse(stream, schema, result, parent);\n    }\n  };\n};\n\nexports.conditional = conditional;\n\nvar loop = function loop(schema, continueFunc) {\n  return function (stream, result, parent, parse) {\n    var arr = [];\n\n    while (continueFunc(stream, result, parent)) {\n      var newParent = {};\n      parse(stream, schema, result, newParent);\n      arr.push(newParent);\n    }\n\n    return arr;\n  };\n};\n\nexports.loop = loop;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readBits = exports.readArray = exports.readUnsigned = exports.readString = exports.peekBytes = exports.readBytes = exports.peekByte = exports.readByte = exports.buildStream = void 0;\n\n// Default stream and parsers for Uint8TypedArray data type\nvar buildStream = function buildStream(uint8Data) {\n  return {\n    data: uint8Data,\n    pos: 0\n  };\n};\n\nexports.buildStream = buildStream;\n\nvar readByte = function readByte() {\n  return function (stream) {\n    return stream.data[stream.pos++];\n  };\n};\n\nexports.readByte = readByte;\n\nvar peekByte = function peekByte() {\n  var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return function (stream) {\n    return stream.data[stream.pos + offset];\n  };\n};\n\nexports.peekByte = peekByte;\n\nvar readBytes = function readBytes(length) {\n  return function (stream) {\n    return stream.data.subarray(stream.pos, stream.pos += length);\n  };\n};\n\nexports.readBytes = readBytes;\n\nvar peekBytes = function peekBytes(length) {\n  return function (stream) {\n    return stream.data.subarray(stream.pos, stream.pos + length);\n  };\n};\n\nexports.peekBytes = peekBytes;\n\nvar readString = function readString(length) {\n  return function (stream) {\n    return Array.from(readBytes(length)(stream)).map(function (value) {\n      return String.fromCharCode(value);\n    }).join('');\n  };\n};\n\nexports.readString = readString;\n\nvar readUnsigned = function readUnsigned(littleEndian) {\n  return function (stream) {\n    var bytes = readBytes(2)(stream);\n    return littleEndian ? (bytes[1] << 8) + bytes[0] : (bytes[0] << 8) + bytes[1];\n  };\n};\n\nexports.readUnsigned = readUnsigned;\n\nvar readArray = function readArray(byteSize, totalOrFunc) {\n  return function (stream, result, parent) {\n    var total = typeof totalOrFunc === 'function' ? totalOrFunc(stream, result, parent) : totalOrFunc;\n    var parser = readBytes(byteSize);\n    var arr = new Array(total);\n\n    for (var i = 0; i < total; i++) {\n      arr[i] = parser(stream);\n    }\n\n    return arr;\n  };\n};\n\nexports.readArray = readArray;\n\nvar subBitsTotal = function subBitsTotal(bits, startIndex, length) {\n  var result = 0;\n\n  for (var i = 0; i < length; i++) {\n    result += bits[startIndex + i] && Math.pow(2, length - i - 1);\n  }\n\n  return result;\n};\n\nvar readBits = function readBits(schema) {\n  return function (stream) {\n    var _byte = readByte()(stream); // convert the byte to bit array\n\n\n    var bits = new Array(8);\n\n    for (var i = 0; i < 8; i++) {\n      bits[7 - i] = !!(_byte & 1 << i);\n    } // convert the bit array to values based on the schema\n\n\n    return Object.keys(schema).reduce(function (res, key) {\n      var def = schema[key];\n\n      if (def.length) {\n        res[key] = subBitsTotal(bits, def.index, def.length);\n      } else {\n        res[key] = bits[def.index];\n      }\n\n      return res;\n    }, {});\n  };\n};\n\nexports.readBits = readBits;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ = require(\"../\");\n\nvar _uint = require(\"../parsers/uint8\");\n\n// a set of 0x00 terminated subblocks\nvar subBlocksSchema = {\n  blocks: function blocks(stream) {\n    var terminator = 0x00;\n    var chunks = [];\n    var streamSize = stream.data.length;\n    var total = 0;\n\n    for (var size = (0, _uint.readByte)()(stream); size !== terminator; size = (0, _uint.readByte)()(stream)) {\n      // catch corrupted files with no terminator\n      if (stream.pos + size >= streamSize) {\n        var availableSize = streamSize - stream.pos;\n        chunks.push((0, _uint.readBytes)(availableSize)(stream));\n        total += availableSize;\n        break;\n      }\n\n      chunks.push((0, _uint.readBytes)(size)(stream));\n      total += size;\n    }\n\n    var result = new Uint8Array(total);\n    var offset = 0;\n\n    for (var i = 0; i < chunks.length; i++) {\n      result.set(chunks[i], offset);\n      offset += chunks[i].length;\n    }\n\n    return result;\n  }\n}; // global control extension\n\nvar gceSchema = (0, _.conditional)({\n  gce: [{\n    codes: (0, _uint.readBytes)(2)\n  }, {\n    byteSize: (0, _uint.readByte)()\n  }, {\n    extras: (0, _uint.readBits)({\n      future: {\n        index: 0,\n        length: 3\n      },\n      disposal: {\n        index: 3,\n        length: 3\n      },\n      userInput: {\n        index: 6\n      },\n      transparentColorGiven: {\n        index: 7\n      }\n    })\n  }, {\n    delay: (0, _uint.readUnsigned)(true)\n  }, {\n    transparentColorIndex: (0, _uint.readByte)()\n  }, {\n    terminator: (0, _uint.readByte)()\n  }]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0xf9;\n}); // image pipeline block\n\nvar imageSchema = (0, _.conditional)({\n  image: [{\n    code: (0, _uint.readByte)()\n  }, {\n    descriptor: [{\n      left: (0, _uint.readUnsigned)(true)\n    }, {\n      top: (0, _uint.readUnsigned)(true)\n    }, {\n      width: (0, _uint.readUnsigned)(true)\n    }, {\n      height: (0, _uint.readUnsigned)(true)\n    }, {\n      lct: (0, _uint.readBits)({\n        exists: {\n          index: 0\n        },\n        interlaced: {\n          index: 1\n        },\n        sort: {\n          index: 2\n        },\n        future: {\n          index: 3,\n          length: 2\n        },\n        size: {\n          index: 5,\n          length: 3\n        }\n      })\n    }]\n  }, (0, _.conditional)({\n    lct: (0, _uint.readArray)(3, function (stream, result, parent) {\n      return Math.pow(2, parent.descriptor.lct.size + 1);\n    })\n  }, function (stream, result, parent) {\n    return parent.descriptor.lct.exists;\n  }), {\n    data: [{\n      minCodeSize: (0, _uint.readByte)()\n    }, subBlocksSchema]\n  }]\n}, function (stream) {\n  return (0, _uint.peekByte)()(stream) === 0x2c;\n}); // plain text block\n\nvar textSchema = (0, _.conditional)({\n  text: [{\n    codes: (0, _uint.readBytes)(2)\n  }, {\n    blockSize: (0, _uint.readByte)()\n  }, {\n    preData: function preData(stream, result, parent) {\n      return (0, _uint.readBytes)(parent.text.blockSize)(stream);\n    }\n  }, subBlocksSchema]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0x01;\n}); // application block\n\nvar applicationSchema = (0, _.conditional)({\n  application: [{\n    codes: (0, _uint.readBytes)(2)\n  }, {\n    blockSize: (0, _uint.readByte)()\n  }, {\n    id: function id(stream, result, parent) {\n      return (0, _uint.readString)(parent.blockSize)(stream);\n    }\n  }, subBlocksSchema]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0xff;\n}); // comment block\n\nvar commentSchema = (0, _.conditional)({\n  comment: [{\n    codes: (0, _uint.readBytes)(2)\n  }, subBlocksSchema]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0xfe;\n});\nvar schema = [{\n  header: [{\n    signature: (0, _uint.readString)(3)\n  }, {\n    version: (0, _uint.readString)(3)\n  }]\n}, {\n  lsd: [{\n    width: (0, _uint.readUnsigned)(true)\n  }, {\n    height: (0, _uint.readUnsigned)(true)\n  }, {\n    gct: (0, _uint.readBits)({\n      exists: {\n        index: 0\n      },\n      resolution: {\n        index: 1,\n        length: 3\n      },\n      sort: {\n        index: 4\n      },\n      size: {\n        index: 5,\n        length: 3\n      }\n    })\n  }, {\n    backgroundColorIndex: (0, _uint.readByte)()\n  }, {\n    pixelAspectRatio: (0, _uint.readByte)()\n  }]\n}, (0, _.conditional)({\n  gct: (0, _uint.readArray)(3, function (stream, result) {\n    return Math.pow(2, result.lsd.gct.size + 1);\n  })\n}, function (stream, result) {\n  return result.lsd.gct.exists;\n}), // content frames\n{\n  frames: (0, _.loop)([gceSchema, applicationSchema, commentSchema, imageSchema, textSchema], function (stream) {\n    var nextCode = (0, _uint.peekByte)()(stream); // rather than check for a terminator, we should check for the existence\n    // of an ext or image block to avoid infinite loops\n    //var terminator = 0x3B;\n    //return nextCode !== terminator;\n\n    return nextCode === 0x21 || nextCode === 0x2c;\n  })\n}];\nvar _default = schema;\nexports[\"default\"] = _default;","\"use strict\";\n/**\n * Deinterlace function from https://github.com/shachaf/jsgif\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deinterlace = void 0;\nexports.deinterlace = function (pixels, width) {\n    var newPixels = new Array(pixels.length);\n    var rows = pixels.length / width;\n    var cpRow = function (toRow, fromRow) {\n        var fromPixels = pixels.slice(fromRow * width, (fromRow + 1) * width);\n        newPixels.splice.apply(newPixels, [toRow * width, width].concat(fromPixels));\n    };\n    // See appendix E.\n    var offsets = [0, 4, 2, 1];\n    var steps = [8, 8, 4, 2];\n    var fromRow = 0;\n    for (var pass = 0; pass < 4; pass++) {\n        for (var toRow = offsets[pass]; toRow < rows; toRow += steps[pass]) {\n            cpRow(toRow, fromRow);\n            fromRow++;\n        }\n    }\n    return newPixels;\n};\n","\"use strict\";\n/**\n * javascript port of java LZW decompression\n * Original java author url: https://gist.github.com/devunwired/4479231\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lzw = void 0;\nexports.lzw = function (minCodeSize, data, pixelCount) {\n    var MAX_STACK_SIZE = 4096;\n    var nullCode = -1;\n    var npix = pixelCount;\n    var available, clear, code_mask, code_size, end_of_information, in_code, old_code, bits, code, i, datum, data_size, first, top, bi, pi;\n    var dstPixels = new Array(pixelCount);\n    var prefix = new Array(MAX_STACK_SIZE);\n    var suffix = new Array(MAX_STACK_SIZE);\n    var pixelStack = new Array(MAX_STACK_SIZE + 1);\n    // Initialize GIF data stream decoder.\n    data_size = minCodeSize;\n    clear = 1 << data_size;\n    end_of_information = clear + 1;\n    available = clear + 2;\n    old_code = nullCode;\n    code_size = data_size + 1;\n    code_mask = (1 << code_size) - 1;\n    for (code = 0; code < clear; code++) {\n        prefix[code] = 0;\n        suffix[code] = code;\n    }\n    // Decode GIF pixel stream.\n    var datum, bits, count, first, top, pi, bi;\n    datum = bits = count = first = top = pi = bi = 0;\n    for (i = 0; i < npix;) {\n        if (top === 0) {\n            if (bits < code_size) {\n                // get the next byte\n                datum += data[bi] << bits;\n                bits += 8;\n                bi++;\n                continue;\n            }\n            // Get the next code.\n            code = datum & code_mask;\n            datum >>= code_size;\n            bits -= code_size;\n            // Interpret the code\n            if (code > available || code == end_of_information) {\n                break;\n            }\n            if (code == clear) {\n                // Reset decoder.\n                code_size = data_size + 1;\n                code_mask = (1 << code_size) - 1;\n                available = clear + 2;\n                old_code = nullCode;\n                continue;\n            }\n            if (old_code == nullCode) {\n                pixelStack[top++] = suffix[code];\n                old_code = code;\n                first = code;\n                continue;\n            }\n            in_code = code;\n            if (code == available) {\n                pixelStack[top++] = first;\n                code = old_code;\n            }\n            while (code > clear) {\n                pixelStack[top++] = suffix[code];\n                code = prefix[code];\n            }\n            first = suffix[code] & 0xff;\n            pixelStack[top++] = first;\n            // add a new string to the table, but only if space is available\n            // if not, just continue with current table until a clear code is found\n            // (deferred clear code implementation as per GIF spec)\n            if (available < MAX_STACK_SIZE) {\n                prefix[available] = old_code;\n                suffix[available] = first;\n                available++;\n                if ((available & code_mask) === 0 && available < MAX_STACK_SIZE) {\n                    code_size++;\n                    code_mask += available;\n                }\n            }\n            old_code = in_code;\n        }\n        // Pop a pixel off the pixel stack.\n        top--;\n        dstPixels[pi++] = pixelStack[top];\n        i++;\n    }\n    for (i = pi; i < npix; i++) {\n        dstPixels[i] = 0; // clear missing pixels\n    }\n    return dstPixels;\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decompressFrames = exports.decompressFrame = exports.parseGIF = void 0;\nvar gif_1 = __importDefault(require(\"js-binary-schema-parser/lib/schemas/gif\"));\nvar js_binary_schema_parser_1 = require(\"js-binary-schema-parser\");\nvar uint8_1 = require(\"js-binary-schema-parser/lib/parsers/uint8\");\nvar deinterlace_1 = require(\"./deinterlace\");\nvar lzw_1 = require(\"./lzw\");\nexports.parseGIF = function (arrayBuffer) {\n    var byteData = new Uint8Array(arrayBuffer);\n    return js_binary_schema_parser_1.parse(uint8_1.buildStream(byteData), gif_1.default);\n};\nvar generatePatch = function (image) {\n    var totalPixels = image.pixels.length;\n    var patchData = new Uint8ClampedArray(totalPixels * 4);\n    for (var i = 0; i < totalPixels; i++) {\n        var pos = i * 4;\n        var colorIndex = image.pixels[i];\n        var color = image.colorTable[colorIndex];\n        patchData[pos] = color[0];\n        patchData[pos + 1] = color[1];\n        patchData[pos + 2] = color[2];\n        patchData[pos + 3] = colorIndex !== image.transparentIndex ? 255 : 0;\n    }\n    return patchData;\n};\nexports.decompressFrame = function (frame, gct, buildImagePatch) {\n    if (!frame.image) {\n        console.warn('gif frame does not have associated image.');\n        return;\n    }\n    var image = frame.image;\n    // get the number of pixels\n    var totalPixels = image.descriptor.width * image.descriptor.height;\n    // do lzw decompression\n    var pixels = lzw_1.lzw(image.data.minCodeSize, image.data.blocks, totalPixels);\n    // deal with interlacing if necessary\n    if (image.descriptor.lct.interlaced) {\n        pixels = deinterlace_1.deinterlace(pixels, image.descriptor.width);\n    }\n    var resultImage = {\n        pixels: pixels,\n        dims: {\n            top: frame.image.descriptor.top,\n            left: frame.image.descriptor.left,\n            width: frame.image.descriptor.width,\n            height: frame.image.descriptor.height\n        }\n    };\n    // color table\n    if (image.descriptor.lct && image.descriptor.lct.exists) {\n        resultImage.colorTable = image.lct;\n    }\n    else {\n        resultImage.colorTable = gct;\n    }\n    // add per frame relevant gce information\n    if (frame.gce) {\n        resultImage.delay = (frame.gce.delay || 10) * 10; // convert to ms\n        resultImage.disposalType = frame.gce.extras.disposal;\n        // transparency\n        if (frame.gce.extras.transparentColorGiven) {\n            resultImage.transparentIndex = frame.gce.transparentColorIndex;\n        }\n    }\n    // create canvas usable imagedata if desired\n    if (buildImagePatch) {\n        resultImage.patch = generatePatch(resultImage);\n    }\n    return resultImage;\n};\nexports.decompressFrames = function (parsedGif, buildImagePatches) {\n    return parsedGif.frames\n        .filter(function (f) { return f.image; })\n        .map(function (f) { return exports.decompressFrame(f, parsedGif.gct, buildImagePatches); });\n};\n","\"use strict\";\n/* NeuQuant Neural-Net Quantization Algorithm\n * ------------------------------------------\n *\n * Copyright (c) 1994 Anthony Dekker\n *\n * NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n * See \"Kohonen neural networks for optimal colour quantization\"\n * in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n * for a discussion of the algorithm.\n * See also  http://members.ozemail.com.au/~dekker/NEUQUANT.HTML\n *\n * Any party obtaining a copy of these files from the author, directly or\n * indirectly, is granted, free of charge, a full and unrestricted irrevocable,\n * world-wide, paid up, royalty-free, nonexclusive right and license to deal\n * in this software and documentation files (the \"Software\"), including without\n * limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons who receive\n * copies from any such party to do so, with the only requirement being\n * that this copyright notice remain intact.\n *\n * (JavaScript port 2012 by Johan Nordberg)\n */\nvar ncycles = 100; // number of learning cycles\nvar netsize = 256; // number of colors used\nvar maxnetpos = netsize - 1;\n// defs for freq and bias\nvar netbiasshift = 4; // bias for colour values\nvar intbiasshift = 16; // bias for fractions\nvar intbias = (1 << intbiasshift);\nvar gammashift = 10;\nvar gamma = (1 << gammashift);\nvar betashift = 10;\nvar beta = (intbias >> betashift); /* beta = 1/1024 */\nvar betagamma = (intbias << (gammashift - betashift));\n// defs for decreasing radius factor\nvar initrad = (netsize >> 3); // for 256 cols, radius starts\nvar radiusbiasshift = 6; // at 32.0 biased by 6 bits\nvar radiusbias = (1 << radiusbiasshift);\nvar initradius = (initrad * radiusbias); //and decreases by a\nvar radiusdec = 30; // factor of 1/30 each cycle\n// defs for decreasing alpha factor\nvar alphabiasshift = 10; // alpha starts at 1.0\nvar initalpha = (1 << alphabiasshift);\nvar alphadec; // biased by 10 bits\n/* radbias and alpharadbias used for radpower calculation */\nvar radbiasshift = 8;\nvar radbias = (1 << radbiasshift);\nvar alpharadbshift = (alphabiasshift + radbiasshift);\nvar alpharadbias = (1 << alpharadbshift);\n// four primes near 500 - assume no image has a length so large that it is\n// divisible by all four primes\nvar prime1 = 499;\nvar prime2 = 491;\nvar prime3 = 487;\nvar prime4 = 503;\nvar minpicturebytes = (3 * prime4);\n/*\n  Constructor: NeuQuant\n\n  Arguments:\n\n  pixels - array of pixels in RGB format\n  samplefac - sampling factor 1 to 30 where lower is better quality\n\n  >\n  > pixels = [r, g, b, r, g, b, r, g, b, ..]\n  >\n*/\nfunction NeuQuant(pixels, samplefac) {\n    var network; // int[netsize][4]\n    var netindex; // for network lookup - really 256\n    // bias and freq arrays for learning\n    var bias;\n    var freq;\n    var radpower;\n    /*\n      Private Method: init\n  \n      sets up arrays\n    */\n    function init() {\n        network = [];\n        netindex = new Int32Array(256);\n        bias = new Int32Array(netsize);\n        freq = new Int32Array(netsize);\n        radpower = new Int32Array(netsize >> 3);\n        var i, v;\n        for (i = 0; i < netsize; i++) {\n            v = (i << (netbiasshift + 8)) / netsize;\n            network[i] = new Float64Array([v, v, v, 0]);\n            //network[i] = [v, v, v, 0]\n            freq[i] = intbias / netsize;\n            bias[i] = 0;\n        }\n    }\n    /*\n      Private Method: unbiasnet\n  \n      unbiases network to give byte values 0..255 and record position i to prepare for sort\n    */\n    function unbiasnet() {\n        for (var i = 0; i < netsize; i++) {\n            network[i][0] >>= netbiasshift;\n            network[i][1] >>= netbiasshift;\n            network[i][2] >>= netbiasshift;\n            network[i][3] = i; // record color number\n        }\n    }\n    /*\n      Private Method: altersingle\n  \n      moves neuron *i* towards biased (b,g,r) by factor *alpha*\n    */\n    function altersingle(alpha, i, b, g, r) {\n        network[i][0] -= (alpha * (network[i][0] - b)) / initalpha;\n        network[i][1] -= (alpha * (network[i][1] - g)) / initalpha;\n        network[i][2] -= (alpha * (network[i][2] - r)) / initalpha;\n    }\n    /*\n      Private Method: alterneigh\n  \n      moves neurons in *radius* around index *i* towards biased (b,g,r) by factor *alpha*\n    */\n    function alterneigh(radius, i, b, g, r) {\n        var lo = Math.abs(i - radius);\n        var hi = Math.min(i + radius, netsize);\n        var j = i + 1;\n        var k = i - 1;\n        var m = 1;\n        var p, a;\n        while ((j < hi) || (k > lo)) {\n            a = radpower[m++];\n            if (j < hi) {\n                p = network[j++];\n                p[0] -= (a * (p[0] - b)) / alpharadbias;\n                p[1] -= (a * (p[1] - g)) / alpharadbias;\n                p[2] -= (a * (p[2] - r)) / alpharadbias;\n            }\n            if (k > lo) {\n                p = network[k--];\n                p[0] -= (a * (p[0] - b)) / alpharadbias;\n                p[1] -= (a * (p[1] - g)) / alpharadbias;\n                p[2] -= (a * (p[2] - r)) / alpharadbias;\n            }\n        }\n    }\n    /*\n      Private Method: contest\n  \n      searches for biased BGR values\n    */\n    function contest(b, g, r) {\n        /*\n          finds closest neuron (min dist) and updates freq\n          finds best neuron (min dist-bias) and returns position\n          for frequently chosen neurons, freq[i] is high and bias[i] is negative\n          bias[i] = gamma * ((1 / netsize) - freq[i])\n        */\n        var bestd = ~(1 << 31);\n        var bestbiasd = bestd;\n        var bestpos = -1;\n        var bestbiaspos = bestpos;\n        var i, n, dist, biasdist, betafreq;\n        for (i = 0; i < netsize; i++) {\n            n = network[i];\n            dist = Math.abs(n[0] - b) + Math.abs(n[1] - g) + Math.abs(n[2] - r);\n            if (dist < bestd) {\n                bestd = dist;\n                bestpos = i;\n            }\n            biasdist = dist - ((bias[i]) >> (intbiasshift - netbiasshift));\n            if (biasdist < bestbiasd) {\n                bestbiasd = biasdist;\n                bestbiaspos = i;\n            }\n            betafreq = (freq[i] >> betashift);\n            freq[i] -= betafreq;\n            bias[i] += (betafreq << gammashift);\n        }\n        freq[bestpos] += beta;\n        bias[bestpos] -= betagamma;\n        return bestbiaspos;\n    }\n    /*\n      Private Method: inxbuild\n  \n      sorts network and builds netindex[0..255]\n    */\n    function inxbuild() {\n        var i, j, p, q, smallpos, smallval, previouscol = 0, startpos = 0;\n        for (i = 0; i < netsize; i++) {\n            p = network[i];\n            smallpos = i;\n            smallval = p[1]; // index on g\n            // find smallest in i..netsize-1\n            for (j = i + 1; j < netsize; j++) {\n                q = network[j];\n                if (q[1] < smallval) { // index on g\n                    smallpos = j;\n                    smallval = q[1]; // index on g\n                }\n            }\n            q = network[smallpos];\n            // swap p (i) and q (smallpos) entries\n            if (i != smallpos) {\n                j = q[0];\n                q[0] = p[0];\n                p[0] = j;\n                j = q[1];\n                q[1] = p[1];\n                p[1] = j;\n                j = q[2];\n                q[2] = p[2];\n                p[2] = j;\n                j = q[3];\n                q[3] = p[3];\n                p[3] = j;\n            }\n            // smallval entry is now in position i\n            if (smallval != previouscol) {\n                netindex[previouscol] = (startpos + i) >> 1;\n                for (j = previouscol + 1; j < smallval; j++)\n                    netindex[j] = i;\n                previouscol = smallval;\n                startpos = i;\n            }\n        }\n        netindex[previouscol] = (startpos + maxnetpos) >> 1;\n        for (j = previouscol + 1; j < 256; j++)\n            netindex[j] = maxnetpos; // really 256\n    }\n    /*\n      Private Method: inxsearch\n  \n      searches for BGR values 0..255 and returns a color index\n    */\n    function inxsearch(b, g, r) {\n        var a, p, dist;\n        var bestd = 1000; // biggest possible dist is 256*3\n        var best = -1;\n        var i = netindex[g]; // index on g\n        var j = i - 1; // start at netindex[g] and work outwards\n        while ((i < netsize) || (j >= 0)) {\n            if (i < netsize) {\n                p = network[i];\n                dist = p[1] - g; // inx key\n                if (dist >= bestd)\n                    i = netsize; // stop iter\n                else {\n                    i++;\n                    if (dist < 0)\n                        dist = -dist;\n                    a = p[0] - b;\n                    if (a < 0)\n                        a = -a;\n                    dist += a;\n                    if (dist < bestd) {\n                        a = p[2] - r;\n                        if (a < 0)\n                            a = -a;\n                        dist += a;\n                        if (dist < bestd) {\n                            bestd = dist;\n                            best = p[3];\n                        }\n                    }\n                }\n            }\n            if (j >= 0) {\n                p = network[j];\n                dist = g - p[1]; // inx key - reverse dif\n                if (dist >= bestd)\n                    j = -1; // stop iter\n                else {\n                    j--;\n                    if (dist < 0)\n                        dist = -dist;\n                    a = p[0] - b;\n                    if (a < 0)\n                        a = -a;\n                    dist += a;\n                    if (dist < bestd) {\n                        a = p[2] - r;\n                        if (a < 0)\n                            a = -a;\n                        dist += a;\n                        if (dist < bestd) {\n                            bestd = dist;\n                            best = p[3];\n                        }\n                    }\n                }\n            }\n        }\n        return best;\n    }\n    /*\n      Private Method: learn\n  \n      \"Main Learning Loop\"\n    */\n    function learn() {\n        var i;\n        var lengthcount = pixels.length;\n        var alphadec = 30 + ((samplefac - 1) / 3);\n        var samplepixels = lengthcount / (3 * samplefac);\n        var delta = ~~(samplepixels / ncycles);\n        var alpha = initalpha;\n        var radius = initradius;\n        var rad = radius >> radiusbiasshift;\n        if (rad <= 1)\n            rad = 0;\n        for (i = 0; i < rad; i++)\n            radpower[i] = alpha * (((rad * rad - i * i) * radbias) / (rad * rad));\n        var step;\n        if (lengthcount < minpicturebytes) {\n            samplefac = 1;\n            step = 3;\n        }\n        else if ((lengthcount % prime1) !== 0) {\n            step = 3 * prime1;\n        }\n        else if ((lengthcount % prime2) !== 0) {\n            step = 3 * prime2;\n        }\n        else if ((lengthcount % prime3) !== 0) {\n            step = 3 * prime3;\n        }\n        else {\n            step = 3 * prime4;\n        }\n        var b, g, r, j;\n        var pix = 0; // current pixel\n        i = 0;\n        while (i < samplepixels) {\n            b = (pixels[pix] & 0xff) << netbiasshift;\n            g = (pixels[pix + 1] & 0xff) << netbiasshift;\n            r = (pixels[pix + 2] & 0xff) << netbiasshift;\n            j = contest(b, g, r);\n            altersingle(alpha, j, b, g, r);\n            if (rad !== 0)\n                alterneigh(rad, j, b, g, r); // alter neighbours\n            pix += step;\n            if (pix >= lengthcount)\n                pix -= lengthcount;\n            i++;\n            if (delta === 0)\n                delta = 1;\n            if (i % delta === 0) {\n                alpha -= alpha / alphadec;\n                radius -= radius / radiusdec;\n                rad = radius >> radiusbiasshift;\n                if (rad <= 1)\n                    rad = 0;\n                for (j = 0; j < rad; j++)\n                    radpower[j] = alpha * (((rad * rad - j * j) * radbias) / (rad * rad));\n            }\n        }\n    }\n    /*\n      Method: buildColormap\n  \n      1. initializes network\n      2. trains it\n      3. removes misconceptions\n      4. builds colorindex\n    */\n    function buildColormap() {\n        init();\n        learn();\n        unbiasnet();\n        inxbuild();\n    }\n    this.buildColormap = buildColormap;\n    /*\n      Method: getColormap\n  \n      builds colormap from the index\n  \n      returns array in the format:\n  \n      >\n      > [r, g, b, r, g, b, r, g, b, ..]\n      >\n    */\n    function getColormap() {\n        var map = [];\n        var index = [];\n        for (var i = 0; i < netsize; i++)\n            index[network[i][3]] = i;\n        var k = 0;\n        for (var l = 0; l < netsize; l++) {\n            var j = index[l];\n            map[k++] = (network[j][0]);\n            map[k++] = (network[j][1]);\n            map[k++] = (network[j][2]);\n        }\n        return map;\n    }\n    this.getColormap = getColormap;\n    /*\n      Method: lookupRGB\n  \n      looks for the closest *r*, *g*, *b* color in the map and\n      returns its index\n    */\n    this.lookupRGB = inxsearch;\n}\nmodule.exports = NeuQuant;\n","\"use strict\";\n/*\n  LZWEncoder.js\n\n  Authors\n  Kevin Weiner (original Java version - kweiner@fmsware.com)\n  Thibault Imbert (AS3 version - bytearray.org)\n  Johan Nordberg (JS version - code@johan-nordberg.com)\n\n  Acknowledgements\n  GIFCOMPR.C - GIF Image compression routines\n  Lempel-Ziv compression based on 'compress'. GIF modifications by\n  David Rowley (mgardi@watdcsu.waterloo.edu)\n  GIF Image compression - modified 'compress'\n  Based on: compress.c - File compression ala IEEE Computer, June 1984.\n  By Authors: Spencer W. Thomas (decvax!harpo!utah-cs!utah-gr!thomas)\n  Jim McKie (decvax!mcvax!jim)\n  Steve Davies (decvax!vax135!petsd!peora!srd)\n  Ken Turkowski (decvax!decwrl!turtlevax!ken)\n  James A. Woods (decvax!ihnp4!ames!jaw)\n  Joe Orost (decvax!vax135!petsd!joe)\n*/\nvar EOF = -1;\nvar BITS = 12;\nvar HSIZE = 5003; // 80% occupancy\nvar masks = [0x0000, 0x0001, 0x0003, 0x0007, 0x000F, 0x001F,\n    0x003F, 0x007F, 0x00FF, 0x01FF, 0x03FF, 0x07FF,\n    0x0FFF, 0x1FFF, 0x3FFF, 0x7FFF, 0xFFFF];\nfunction LZWEncoder(width, height, pixels, colorDepth) {\n    var initCodeSize = Math.max(2, colorDepth);\n    var accum = new Uint8Array(256);\n    var htab = new Int32Array(HSIZE);\n    var codetab = new Int32Array(HSIZE);\n    var cur_accum, cur_bits = 0;\n    var a_count;\n    var free_ent = 0; // first unused entry\n    var maxcode;\n    // block compression parameters -- after all codes are used up,\n    // and compression rate changes, start over.\n    var clear_flg = false;\n    // Algorithm: use open addressing double hashing (no chaining) on the\n    // prefix code / next character combination. We do a variant of Knuth's\n    // algorithm D (vol. 3, sec. 6.4) along with G. Knott's relatively-prime\n    // secondary probe. Here, the modular division first probe is gives way\n    // to a faster exclusive-or manipulation. Also do block compression with\n    // an adaptive reset, whereby the code table is cleared when the compression\n    // ratio decreases, but after the table fills. The variable-length output\n    // codes are re-sized at this point, and a special CLEAR code is generated\n    // for the decompressor. Late addition: construct the table according to\n    // file size for noticeable speed improvement on small files. Please direct\n    // questions about this implementation to ames!jaw.\n    var g_init_bits, ClearCode, EOFCode;\n    var remaining, curPixel, n_bits;\n    // Add a character to the end of the current packet, and if it is 254\n    // characters, flush the packet to disk.\n    function char_out(c, outs) {\n        accum[a_count++] = c;\n        if (a_count >= 254)\n            flush_char(outs);\n    }\n    // Clear out the hash table\n    // table clear for block compress\n    function cl_block(outs) {\n        cl_hash(HSIZE);\n        free_ent = ClearCode + 2;\n        clear_flg = true;\n        output(ClearCode, outs);\n    }\n    // Reset code table\n    function cl_hash(hsize) {\n        for (var i = 0; i < hsize; ++i)\n            htab[i] = -1;\n    }\n    function compress(init_bits, outs) {\n        var fcode, c, i, ent, disp, hsize_reg, hshift;\n        // Set up the globals: g_init_bits - initial number of bits\n        g_init_bits = init_bits;\n        // Set up the necessary values\n        clear_flg = false;\n        n_bits = g_init_bits;\n        maxcode = MAXCODE(n_bits);\n        ClearCode = 1 << (init_bits - 1);\n        EOFCode = ClearCode + 1;\n        free_ent = ClearCode + 2;\n        a_count = 0; // clear packet\n        ent = nextPixel();\n        hshift = 0;\n        for (fcode = HSIZE; fcode < 65536; fcode *= 2)\n            ++hshift;\n        hshift = 8 - hshift; // set hash code range bound\n        hsize_reg = HSIZE;\n        cl_hash(hsize_reg); // clear hash table\n        output(ClearCode, outs);\n        outer_loop: while ((c = nextPixel()) != EOF) {\n            fcode = (c << BITS) + ent;\n            i = (c << hshift) ^ ent; // xor hashing\n            if (htab[i] === fcode) {\n                ent = codetab[i];\n                continue;\n            }\n            else if (htab[i] >= 0) { // non-empty slot\n                disp = hsize_reg - i; // secondary hash (after G. Knott)\n                if (i === 0)\n                    disp = 1;\n                do {\n                    if ((i -= disp) < 0)\n                        i += hsize_reg;\n                    if (htab[i] === fcode) {\n                        ent = codetab[i];\n                        continue outer_loop;\n                    }\n                } while (htab[i] >= 0);\n            }\n            output(ent, outs);\n            ent = c;\n            if (free_ent < 1 << BITS) {\n                codetab[i] = free_ent++; // code -> hashtable\n                htab[i] = fcode;\n            }\n            else {\n                cl_block(outs);\n            }\n        }\n        // Put out the final code.\n        output(ent, outs);\n        output(EOFCode, outs);\n    }\n    function encode(outs) {\n        outs.writeByte(initCodeSize); // write \"initial code size\" byte\n        remaining = width * height; // reset navigation variables\n        curPixel = 0;\n        compress(initCodeSize + 1, outs); // compress and write the pixel data\n        outs.writeByte(0); // write block terminator\n    }\n    // Flush the packet to disk, and reset the accumulator\n    function flush_char(outs) {\n        if (a_count > 0) {\n            outs.writeByte(a_count);\n            outs.writeBytes(accum, 0, a_count);\n            a_count = 0;\n        }\n    }\n    function MAXCODE(n_bits) {\n        return (1 << n_bits) - 1;\n    }\n    // Return the next pixel from the image\n    function nextPixel() {\n        if (remaining === 0)\n            return EOF;\n        --remaining;\n        var pix = pixels[curPixel++];\n        return pix & 0xff;\n    }\n    function output(code, outs) {\n        cur_accum &= masks[cur_bits];\n        if (cur_bits > 0)\n            cur_accum |= (code << cur_bits);\n        else\n            cur_accum = code;\n        cur_bits += n_bits;\n        while (cur_bits >= 8) {\n            char_out((cur_accum & 0xff), outs);\n            cur_accum >>= 8;\n            cur_bits -= 8;\n        }\n        // If the next entry is going to be too big for the code size,\n        // then increase it, if possible.\n        if (free_ent > maxcode || clear_flg) {\n            if (clear_flg) {\n                maxcode = MAXCODE(n_bits = g_init_bits);\n                clear_flg = false;\n            }\n            else {\n                ++n_bits;\n                if (n_bits == BITS)\n                    maxcode = 1 << BITS;\n                else\n                    maxcode = MAXCODE(n_bits);\n            }\n        }\n        if (code == EOFCode) {\n            // At EOF, write the rest of the buffer.\n            while (cur_bits > 0) {\n                char_out((cur_accum & 0xff), outs);\n                cur_accum >>= 8;\n                cur_bits -= 8;\n            }\n            flush_char(outs);\n        }\n    }\n    this.encode = encode;\n}\nmodule.exports = LZWEncoder;\n","\"use strict\";\n/*\n  GIFEncoder.js\n\n  Authors\n  Kevin Weiner (original Java version - kweiner@fmsware.com)\n  Thibault Imbert (AS3 version - bytearray.org)\n  Johan Nordberg (JS version - code@johan-nordberg.com)\n  Makito (Optimized for AwesomeQR - sumimakito@hotmail,com)\n*/\nvar NeuQuant = require(\"./TypedNeuQuant.js\");\nvar LZWEncoder = require(\"./LZWEncoder.js\");\nfunction ByteArray() {\n    this.page = -1;\n    this.pages = [];\n    this.newPage();\n}\nByteArray.pageSize = 4096;\nByteArray.charMap = {};\nfor (var i = 0; i < 256; i++)\n    ByteArray.charMap[i] = String.fromCharCode(i);\nByteArray.prototype.newPage = function () {\n    this.pages[++this.page] = new Uint8Array(ByteArray.pageSize);\n    this.cursor = 0;\n};\nByteArray.prototype.getData = function () {\n    var rv = \"\";\n    for (var p = 0; p < this.pages.length; p++) {\n        for (var i = 0; i < ByteArray.pageSize; i++) {\n            rv += ByteArray.charMap[this.pages[p][i]];\n        }\n    }\n    return rv;\n};\nByteArray.prototype.toFlattenUint8Array = function () {\n    var chunks = [];\n    for (var p = 0; p < this.pages.length; p++) {\n        if (p === this.pages.length - 1) {\n            var chunk = Uint8Array.from(this.pages[p].slice(0, this.cursor));\n            chunks.push(chunk);\n        }\n        else {\n            chunks.push(this.pages[p]);\n        }\n    }\n    var flatten = new Uint8Array(chunks.reduce(function (acc, chunk) { return acc + chunk.length; }, 0));\n    chunks.reduce(function (lastLength, chunk) {\n        flatten.set(chunk, lastLength);\n        return lastLength + chunk.length;\n    }, 0);\n    return flatten;\n};\nByteArray.prototype.writeByte = function (val) {\n    if (this.cursor >= ByteArray.pageSize)\n        this.newPage();\n    this.pages[this.page][this.cursor++] = val;\n};\nByteArray.prototype.writeUTFBytes = function (string) {\n    for (var l = string.length, i = 0; i < l; i++)\n        this.writeByte(string.charCodeAt(i));\n};\nByteArray.prototype.writeBytes = function (array, offset, length) {\n    for (var l = length || array.length, i = offset || 0; i < l; i++)\n        this.writeByte(array[i]);\n};\nfunction GIFEncoder(width, height) {\n    // image size\n    this.width = ~~width;\n    this.height = ~~height;\n    // transparent color if given\n    this.transparent = null;\n    // transparent index in color table\n    this.transIndex = 0;\n    // -1 = no repeat, 0 = forever. anything else is repeat count\n    this.repeat = -1;\n    // frame delay (hundredths)\n    this.delay = 0;\n    this.image = null; // current frame\n    this.pixels = null; // BGR byte array from frame\n    this.indexedPixels = null; // converted frame indexed to palette\n    this.colorDepth = null; // number of bit planes\n    this.colorTab = null; // RGB palette\n    this.neuQuant = null; // NeuQuant instance that was used to generate this.colorTab.\n    this.usedEntry = new Array(); // active palette entries\n    this.palSize = 7; // color table size (bits-1)\n    this.dispose = -1; // disposal code (-1 = use default)\n    this.firstFrame = true;\n    this.sample = 10; // default sample interval for quantizer\n    this.dither = false; // default dithering\n    this.globalPalette = false;\n    this.out = new ByteArray();\n}\n/*\n  Sets the delay time between each frame, or changes it for subsequent frames\n  (applies to last frame added)\n*/\nGIFEncoder.prototype.setDelay = function (milliseconds) {\n    this.delay = Math.round(milliseconds / 10);\n};\n/*\n  Sets frame rate in frames per second.\n*/\nGIFEncoder.prototype.setFrameRate = function (fps) {\n    this.delay = Math.round(100 / fps);\n};\n/*\n  Sets the GIF frame disposal code for the last added frame and any\n  subsequent frames.\n\n  Default is 0 if no transparent color has been set, otherwise 2.\n*/\nGIFEncoder.prototype.setDispose = function (disposalCode) {\n    if (disposalCode >= 0)\n        this.dispose = disposalCode;\n};\n/*\n  Sets the number of times the set of GIF frames should be played.\n\n  -1 = play once\n  0 = repeat indefinitely\n\n  Default is -1\n\n  Must be invoked before the first image is added\n*/\nGIFEncoder.prototype.setRepeat = function (repeat) {\n    this.repeat = repeat;\n};\n/*\n  Sets the transparent color for the last added frame and any subsequent\n  frames. Since all colors are subject to modification in the quantization\n  process, the color in the final palette for each frame closest to the given\n  color becomes the transparent color for that frame. May be set to null to\n  indicate no transparent color.\n*/\nGIFEncoder.prototype.setTransparent = function (color) {\n    this.transparent = color;\n};\n/*\n  Adds next GIF frame. The frame is not written immediately, but is\n  actually deferred until the next frame is received so that timing\n  data can be inserted.  Invoking finish() flushes all frames.\n*/\nGIFEncoder.prototype.addFrame = function (imageData) {\n    this.image = imageData;\n    this.colorTab = this.globalPalette && this.globalPalette.slice ? this.globalPalette : null;\n    this.getImagePixels(); // convert to correct format if necessary\n    this.analyzePixels(); // build color table & map pixels\n    if (this.globalPalette === true)\n        this.globalPalette = this.colorTab;\n    if (this.firstFrame) {\n        this.writeHeader();\n        this.writeLSD(); // logical screen descriptior\n        this.writePalette(); // global color table\n        if (this.repeat >= 0) {\n            // use NS app extension to indicate reps\n            this.writeNetscapeExt();\n        }\n    }\n    this.writeGraphicCtrlExt(); // write graphic control extension\n    this.writeImageDesc(); // image descriptor\n    if (!this.firstFrame && !this.globalPalette)\n        this.writePalette(); // local color table\n    this.writePixels(); // encode and write pixel data\n    this.firstFrame = false;\n};\n/*\n  Adds final trailer to the GIF stream, if you don't call the finish method\n  the GIF stream will not be valid.\n*/\nGIFEncoder.prototype.finish = function () {\n    this.out.writeByte(0x3b); // gif trailer\n};\n/*\n  Sets quality of color quantization (conversion of images to the maximum 256\n  colors allowed by the GIF specification). Lower values (minimum = 1)\n  produce better colors, but slow processing significantly. 10 is the\n  default, and produces good color mapping at reasonable speeds. Values\n  greater than 20 do not yield significant improvements in speed.\n*/\nGIFEncoder.prototype.setQuality = function (quality) {\n    if (quality < 1)\n        quality = 1;\n    this.sample = quality;\n};\n/*\n  Sets dithering method. Available are:\n  - FALSE no dithering\n  - TRUE or FloydSteinberg\n  - FalseFloydSteinberg\n  - Stucki\n  - Atkinson\n  You can add '-serpentine' to use serpentine scanning\n*/\nGIFEncoder.prototype.setDither = function (dither) {\n    if (dither === true)\n        dither = \"FloydSteinberg\";\n    this.dither = dither;\n};\n/*\n  Sets global palette for all frames.\n  You can provide TRUE to create global palette from first picture.\n  Or an array of r,g,b,r,g,b,...\n*/\nGIFEncoder.prototype.setGlobalPalette = function (palette) {\n    this.globalPalette = palette;\n};\n/*\n  Returns global palette used for all frames.\n  If setGlobalPalette(true) was used, then this function will return\n  calculated palette after the first frame is added.\n*/\nGIFEncoder.prototype.getGlobalPalette = function () {\n    return (this.globalPalette && this.globalPalette.slice && this.globalPalette.slice(0)) || this.globalPalette;\n};\n/*\n  Writes GIF file header\n*/\nGIFEncoder.prototype.writeHeader = function () {\n    this.out.writeUTFBytes(\"GIF89a\");\n};\n/*\n  Analyzes current frame colors and creates color map.\n*/\nGIFEncoder.prototype.analyzePixels = function () {\n    if (!this.colorTab) {\n        this.neuQuant = new NeuQuant(this.pixels, this.sample);\n        this.neuQuant.buildColormap(); // create reduced palette\n        this.colorTab = this.neuQuant.getColormap();\n    }\n    // map image pixels to new palette\n    if (this.dither) {\n        this.ditherPixels(this.dither.replace(\"-serpentine\", \"\"), this.dither.match(/-serpentine/) !== null);\n    }\n    else {\n        this.indexPixels();\n    }\n    this.pixels = null;\n    this.colorDepth = 8;\n    this.palSize = 7;\n    // get closest match to transparent color if specified\n    if (this.transparent !== null) {\n        this.transIndex = this.findClosest(this.transparent, true);\n    }\n};\n/*\n  Index pixels, without dithering\n*/\nGIFEncoder.prototype.indexPixels = function (imgq) {\n    var nPix = this.pixels.length / 3;\n    this.indexedPixels = new Uint8Array(nPix);\n    var k = 0;\n    for (var j = 0; j < nPix; j++) {\n        var index = this.findClosestRGB(this.pixels[k++] & 0xff, this.pixels[k++] & 0xff, this.pixels[k++] & 0xff);\n        this.usedEntry[index] = true;\n        this.indexedPixels[j] = index;\n    }\n};\n/*\n  Taken from http://jsbin.com/iXofIji/2/edit by PAEz\n*/\nGIFEncoder.prototype.ditherPixels = function (kernel, serpentine) {\n    var kernels = {\n        FalseFloydSteinberg: [\n            [3 / 8, 1, 0],\n            [3 / 8, 0, 1],\n            [2 / 8, 1, 1],\n        ],\n        FloydSteinberg: [\n            [7 / 16, 1, 0],\n            [3 / 16, -1, 1],\n            [5 / 16, 0, 1],\n            [1 / 16, 1, 1],\n        ],\n        Stucki: [\n            [8 / 42, 1, 0],\n            [4 / 42, 2, 0],\n            [2 / 42, -2, 1],\n            [4 / 42, -1, 1],\n            [8 / 42, 0, 1],\n            [4 / 42, 1, 1],\n            [2 / 42, 2, 1],\n            [1 / 42, -2, 2],\n            [2 / 42, -1, 2],\n            [4 / 42, 0, 2],\n            [2 / 42, 1, 2],\n            [1 / 42, 2, 2],\n        ],\n        Atkinson: [\n            [1 / 8, 1, 0],\n            [1 / 8, 2, 0],\n            [1 / 8, -1, 1],\n            [1 / 8, 0, 1],\n            [1 / 8, 1, 1],\n            [1 / 8, 0, 2],\n        ],\n    };\n    if (!kernel || !kernels[kernel]) {\n        throw \"Unknown dithering kernel: \" + kernel;\n    }\n    var ds = kernels[kernel];\n    var index = 0, height = this.height, width = this.width, data = this.pixels;\n    var direction = serpentine ? -1 : 1;\n    this.indexedPixels = new Uint8Array(this.pixels.length / 3);\n    for (var y = 0; y < height; y++) {\n        if (serpentine)\n            direction = direction * -1;\n        for (var x = direction == 1 ? 0 : width - 1, xend = direction == 1 ? width : 0; x !== xend; x += direction) {\n            index = y * width + x;\n            // Get original colour\n            var idx = index * 3;\n            var r1 = data[idx];\n            var g1 = data[idx + 1];\n            var b1 = data[idx + 2];\n            // Get converted colour\n            idx = this.findClosestRGB(r1, g1, b1);\n            this.usedEntry[idx] = true;\n            this.indexedPixels[index] = idx;\n            idx *= 3;\n            var r2 = this.colorTab[idx];\n            var g2 = this.colorTab[idx + 1];\n            var b2 = this.colorTab[idx + 2];\n            var er = r1 - r2;\n            var eg = g1 - g2;\n            var eb = b1 - b2;\n            for (var i = direction == 1 ? 0 : ds.length - 1, end = direction == 1 ? ds.length : 0; i !== end; i += direction) {\n                var x1 = ds[i][1]; // *direction;  //  Should this by timesd by direction?..to make the kernel go in the opposite direction....got no idea....\n                var y1 = ds[i][2];\n                if (x1 + x >= 0 && x1 + x < width && y1 + y >= 0 && y1 + y < height) {\n                    var d = ds[i][0];\n                    idx = index + x1 + y1 * width;\n                    idx *= 3;\n                    data[idx] = Math.max(0, Math.min(255, data[idx] + er * d));\n                    data[idx + 1] = Math.max(0, Math.min(255, data[idx + 1] + eg * d));\n                    data[idx + 2] = Math.max(0, Math.min(255, data[idx + 2] + eb * d));\n                }\n            }\n        }\n    }\n};\n/*\n  Returns index of palette color closest to c\n*/\nGIFEncoder.prototype.findClosest = function (c, used) {\n    return this.findClosestRGB((c & 0xff0000) >> 16, (c & 0x00ff00) >> 8, c & 0x0000ff, used);\n};\nGIFEncoder.prototype.findClosestRGB = function (r, g, b, used) {\n    if (this.colorTab === null)\n        return -1;\n    if (this.neuQuant && !used) {\n        return this.neuQuant.lookupRGB(r, g, b);\n    }\n    var c = b | (g << 8) | (r << 16);\n    var minpos = 0;\n    var dmin = 256 * 256 * 256;\n    var len = this.colorTab.length;\n    for (var i = 0, index = 0; i < len; index++) {\n        var dr = r - (this.colorTab[i++] & 0xff);\n        var dg = g - (this.colorTab[i++] & 0xff);\n        var db = b - (this.colorTab[i++] & 0xff);\n        var d = dr * dr + dg * dg + db * db;\n        if ((!used || this.usedEntry[index]) && d < dmin) {\n            dmin = d;\n            minpos = index;\n        }\n    }\n    return minpos;\n};\n/*\n  Extracts image pixels into byte array pixels\n  (removes alphachannel from canvas imagedata)\n*/\nGIFEncoder.prototype.getImagePixels = function () {\n    var w = this.width;\n    var h = this.height;\n    this.pixels = new Uint8Array(w * h * 3);\n    var data = this.image;\n    var srcPos = 0;\n    var count = 0;\n    for (var i = 0; i < h; i++) {\n        for (var j = 0; j < w; j++) {\n            this.pixels[count++] = data[srcPos++];\n            this.pixels[count++] = data[srcPos++];\n            this.pixels[count++] = data[srcPos++];\n            srcPos++;\n        }\n    }\n};\n/*\n  Writes Graphic Control Extension\n*/\nGIFEncoder.prototype.writeGraphicCtrlExt = function () {\n    this.out.writeByte(0x21); // extension introducer\n    this.out.writeByte(0xf9); // GCE label\n    this.out.writeByte(4); // data block size\n    var transp, disp;\n    if (this.transparent === null) {\n        transp = 0;\n        disp = 0; // dispose = no action\n    }\n    else {\n        transp = 1;\n        disp = 2; // force clear if using transparent color\n    }\n    if (this.dispose >= 0) {\n        disp = this.dispose & 7; // user override\n    }\n    disp <<= 2;\n    // packed fields\n    this.out.writeByte(0 | // 1:3 reserved\n        disp | // 4:6 disposal\n        0 | // 7 user input - 0 = none\n        transp // 8 transparency flag\n    );\n    this.writeShort(this.delay); // delay x 1/100 sec\n    this.out.writeByte(this.transIndex); // transparent color index\n    this.out.writeByte(0); // block terminator\n};\n/*\n  Writes Image Descriptor\n*/\nGIFEncoder.prototype.writeImageDesc = function () {\n    this.out.writeByte(0x2c); // image separator\n    this.writeShort(0); // image position x,y = 0,0\n    this.writeShort(0);\n    this.writeShort(this.width); // image size\n    this.writeShort(this.height);\n    // packed fields\n    if (this.firstFrame || this.globalPalette) {\n        // no LCT - GCT is used for first (or only) frame\n        this.out.writeByte(0);\n    }\n    else {\n        // specify normal LCT\n        this.out.writeByte(0x80 | // 1 local color table 1=yes\n            0 | // 2 interlace - 0=no\n            0 | // 3 sorted - 0=no\n            0 | // 4-5 reserved\n            this.palSize // 6-8 size of color table\n        );\n    }\n};\n/*\n  Writes Logical Screen Descriptor\n*/\nGIFEncoder.prototype.writeLSD = function () {\n    // logical screen size\n    this.writeShort(this.width);\n    this.writeShort(this.height);\n    // packed fields\n    this.out.writeByte(0x80 | // 1 : global color table flag = 1 (gct used)\n        0x70 | // 2-4 : color resolution = 7\n        0x00 | // 5 : gct sort flag = 0\n        this.palSize // 6-8 : gct size\n    );\n    this.out.writeByte(0); // background color index\n    this.out.writeByte(0); // pixel aspect ratio - assume 1:1\n};\n/*\n  Writes Netscape application extension to define repeat count.\n*/\nGIFEncoder.prototype.writeNetscapeExt = function () {\n    this.out.writeByte(0x21); // extension introducer\n    this.out.writeByte(0xff); // app extension label\n    this.out.writeByte(11); // block size\n    this.out.writeUTFBytes(\"NETSCAPE2.0\"); // app id + auth code\n    this.out.writeByte(3); // sub-block size\n    this.out.writeByte(1); // loop sub-block id\n    this.writeShort(this.repeat); // loop count (extra iterations, 0=repeat forever)\n    this.out.writeByte(0); // block terminator\n};\n/*\n  Writes color table\n*/\nGIFEncoder.prototype.writePalette = function () {\n    this.out.writeBytes(this.colorTab);\n    var n = 3 * 256 - this.colorTab.length;\n    for (var i = 0; i < n; i++)\n        this.out.writeByte(0);\n};\nGIFEncoder.prototype.writeShort = function (pValue) {\n    this.out.writeByte(pValue & 0xff);\n    this.out.writeByte((pValue >> 8) & 0xff);\n};\n/*\n  Encodes and writes pixel data\n*/\nGIFEncoder.prototype.writePixels = function () {\n    var enc = new LZWEncoder(this.width, this.height, this.indexedPixels, this.colorDepth);\n    enc.encode(this.out);\n};\n/*\n  Retrieves the GIF stream\n*/\nGIFEncoder.prototype.stream = function () {\n    return this.out;\n};\nmodule.exports = GIFEncoder;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AwesomeQR = void 0;\nvar canvas_1 = require(\"canvas\");\nvar gifuct_js_1 = require(\"./gifuct-js\");\nvar qrcode_1 = require(\"./qrcode\");\nvar GIFEncoder_1 = __importDefault(require(\"./gif.js/GIFEncoder\"));\nvar defaultScale = 0.4;\nvar AwesomeQR = /** @class */ (function () {\n    function AwesomeQR(options) {\n        var _options = Object.assign({}, options);\n        Object.keys(AwesomeQR.defaultOptions).forEach(function (k) {\n            if (!(k in _options)) {\n                Object.defineProperty(_options, k, { value: AwesomeQR.defaultOptions[k], enumerable: true, writable: true });\n            }\n        });\n        if (!_options.components) {\n            _options.components = AwesomeQR.defaultComponentOptions;\n        }\n        else if (typeof _options.components === \"object\") {\n            Object.keys(AwesomeQR.defaultComponentOptions).forEach(function (k) {\n                if (!(k in _options.components)) {\n                    Object.defineProperty(_options.components, k, {\n                        value: AwesomeQR.defaultComponentOptions[k],\n                        enumerable: true,\n                        writable: true,\n                    });\n                }\n                else {\n                    Object.defineProperty(_options.components, k, {\n                        value: __assign(__assign({}, AwesomeQR.defaultComponentOptions[k]), _options.components[k]),\n                        enumerable: true,\n                        writable: true,\n                    });\n                }\n            });\n        }\n        if (_options.dotScale !== null && _options.dotScale !== undefined) {\n            if (_options.dotScale <= 0 || _options.dotScale > 1) {\n                throw new Error(\"dotScale should be in range (0, 1].\");\n            }\n            _options.components.data.scale = _options.dotScale;\n            _options.components.timing.scale = _options.dotScale;\n            _options.components.alignment.scale = _options.dotScale;\n        }\n        this.options = _options;\n        this.canvas = canvas_1.createCanvas(options.size, options.size);\n        this.canvasContext = this.canvas.getContext(\"2d\");\n        this.qrCode = new qrcode_1.QRCodeModel(-1, this.options.correctLevel);\n        if (Number.isInteger(this.options.maskPattern)) {\n            this.qrCode.maskPattern = this.options.maskPattern;\n        }\n        if (Number.isInteger(this.options.version)) {\n            this.qrCode.typeNumber = this.options.version;\n        }\n        this.qrCode.addData(this.options.text);\n        this.qrCode.make();\n    }\n    AwesomeQR.prototype.draw = function () {\n        var _this = this;\n        return new Promise(function (resolve) { return _this._draw().then(resolve); });\n    };\n    AwesomeQR.prototype._clear = function () {\n        this.canvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    };\n    AwesomeQR._prepareRoundedCornerClip = function (canvasContext, x, y, w, h, r) {\n        canvasContext.beginPath();\n        canvasContext.moveTo(x, y);\n        canvasContext.arcTo(x + w, y, x + w, y + h, r);\n        canvasContext.arcTo(x + w, y + h, x, y + h, r);\n        canvasContext.arcTo(x, y + h, x, y, r);\n        canvasContext.arcTo(x, y, x + w, y, r);\n        canvasContext.closePath();\n    };\n    AwesomeQR._getAverageRGB = function (image) {\n        var blockSize = 5;\n        var defaultRGB = {\n            r: 0,\n            g: 0,\n            b: 0,\n        };\n        var width, height;\n        var i = -4;\n        var rgb = {\n            r: 0,\n            g: 0,\n            b: 0,\n        };\n        var count = 0;\n        height = image.naturalHeight || image.height;\n        width = image.naturalWidth || image.width;\n        var canvas = canvas_1.createCanvas(width, height);\n        var context = canvas.getContext(\"2d\");\n        if (!context) {\n            return defaultRGB;\n        }\n        context.drawImage(image, 0, 0);\n        var data;\n        try {\n            data = context.getImageData(0, 0, width, height);\n        }\n        catch (e) {\n            return defaultRGB;\n        }\n        while ((i += blockSize * 4) < data.data.length) {\n            if (data.data[i] > 200 || data.data[i + 1] > 200 || data.data[i + 2] > 200)\n                continue;\n            ++count;\n            rgb.r += data.data[i];\n            rgb.g += data.data[i + 1];\n            rgb.b += data.data[i + 2];\n        }\n        rgb.r = ~~(rgb.r / count);\n        rgb.g = ~~(rgb.g / count);\n        rgb.b = ~~(rgb.b / count);\n        return rgb;\n    };\n    AwesomeQR._drawDot = function (canvasContext, centerX, centerY, nSize, xyOffset, dotScale) {\n        if (xyOffset === void 0) { xyOffset = 0; }\n        if (dotScale === void 0) { dotScale = 1; }\n        canvasContext.fillRect((centerX + xyOffset) * nSize, (centerY + xyOffset) * nSize, dotScale * nSize, dotScale * nSize);\n    };\n    AwesomeQR._drawAlignProtector = function (canvasContext, centerX, centerY, nSize) {\n        canvasContext.clearRect((centerX - 2) * nSize, (centerY - 2) * nSize, 5 * nSize, 5 * nSize);\n        canvasContext.fillRect((centerX - 2) * nSize, (centerY - 2) * nSize, 5 * nSize, 5 * nSize);\n    };\n    AwesomeQR._drawAlign = function (canvasContext, centerX, centerY, nSize, xyOffset, dotScale, colorDark, hasProtector) {\n        if (xyOffset === void 0) { xyOffset = 0; }\n        if (dotScale === void 0) { dotScale = 1; }\n        var oldFillStyle = canvasContext.fillStyle;\n        canvasContext.fillStyle = colorDark;\n        new Array(4).fill(0).map(function (_, i) {\n            AwesomeQR._drawDot(canvasContext, centerX - 2 + i, centerY - 2, nSize, xyOffset, dotScale);\n            AwesomeQR._drawDot(canvasContext, centerX + 2, centerY - 2 + i, nSize, xyOffset, dotScale);\n            AwesomeQR._drawDot(canvasContext, centerX + 2 - i, centerY + 2, nSize, xyOffset, dotScale);\n            AwesomeQR._drawDot(canvasContext, centerX - 2, centerY + 2 - i, nSize, xyOffset, dotScale);\n        });\n        AwesomeQR._drawDot(canvasContext, centerX, centerY, nSize, xyOffset, dotScale);\n        if (!hasProtector) {\n            canvasContext.fillStyle = \"rgba(255, 255, 255, 0.6)\";\n            new Array(2).fill(0).map(function (_, i) {\n                AwesomeQR._drawDot(canvasContext, centerX - 1 + i, centerY - 1, nSize, xyOffset, dotScale);\n                AwesomeQR._drawDot(canvasContext, centerX + 1, centerY - 1 + i, nSize, xyOffset, dotScale);\n                AwesomeQR._drawDot(canvasContext, centerX + 1 - i, centerY + 1, nSize, xyOffset, dotScale);\n                AwesomeQR._drawDot(canvasContext, centerX - 1, centerY + 1 - i, nSize, xyOffset, dotScale);\n            });\n        }\n        canvasContext.fillStyle = oldFillStyle;\n    };\n    AwesomeQR.prototype._draw = function () {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;\n        return __awaiter(this, void 0, void 0, function () {\n            var nCount, rawSize, rawMargin, margin, rawViewportSize, whiteMargin, backgroundDimming, nSize, viewportSize, size, mainCanvas, mainCanvasContext, backgroundCanvas, backgroundCanvasContext, parsedGIFBackground, gifFrames, gif, r, g, b, count, i, c, backgroundImage, avgRGB, alignmentPatternCenters, dataScale, dataXyOffset, row, col, bIsDark, isBlkPosCtr, isTiming, isProtected, i, nLeft, nTop, inAgnRange, cornerAlignmentCenter, protectorStyle, i, j, agnX, agnY, timingScale, timingXyOffset, i, cornerAlignmentScale, cornerAlignmentXyOffset, alignmentScale, alignmentXyOffset, i, j, agnX, agnY, logoImage, logoScale, logoMargin, logoCornerRadius, logoSize, x, y, oldGlobalCompositeOperation, gifOutput_1, backgroundCanvas_1, backgroundCanvasContext_1, patchCanvas_1, patchCanvasContext_1, patchData_1, u8array, binary, outCanvas, outCanvasContext;\n            return __generator(this, function (_v) {\n                switch (_v.label) {\n                    case 0:\n                        nCount = (_a = this.qrCode) === null || _a === void 0 ? void 0 : _a.moduleCount;\n                        rawSize = this.options.size;\n                        rawMargin = this.options.margin;\n                        if (rawMargin < 0 || rawMargin * 2 >= rawSize) {\n                            rawMargin = 0;\n                        }\n                        margin = Math.ceil(rawMargin);\n                        rawViewportSize = rawSize - 2 * rawMargin;\n                        whiteMargin = this.options.whiteMargin;\n                        backgroundDimming = this.options.backgroundDimming;\n                        nSize = Math.ceil(rawViewportSize / nCount);\n                        viewportSize = nSize * nCount;\n                        size = viewportSize + 2 * margin;\n                        mainCanvas = canvas_1.createCanvas(size, size);\n                        mainCanvasContext = mainCanvas.getContext(\"2d\");\n                        this._clear();\n                        // Translate to make the top and left margins off the viewport\n                        mainCanvasContext.save();\n                        mainCanvasContext.translate(margin, margin);\n                        backgroundCanvas = canvas_1.createCanvas(size, size);\n                        backgroundCanvasContext = backgroundCanvas.getContext(\"2d\");\n                        parsedGIFBackground = null;\n                        gifFrames = [];\n                        if (!!!this.options.gifBackground) return [3 /*break*/, 1];\n                        gif = gifuct_js_1.parseGIF(this.options.gifBackground);\n                        parsedGIFBackground = gif;\n                        gifFrames = gifuct_js_1.decompressFrames(gif, true);\n                        if (this.options.autoColor) {\n                            r = 0, g = 0, b = 0;\n                            count = 0;\n                            for (i = 0; i < gifFrames[0].colorTable.length; i++) {\n                                c = gifFrames[0].colorTable[i];\n                                if (c[0] > 200 || c[1] > 200 || c[2] > 200)\n                                    continue;\n                                if (c[0] === 0 && c[1] === 0 && c[2] === 0)\n                                    continue;\n                                count++;\n                                r += c[0];\n                                g += c[1];\n                                b += c[2];\n                            }\n                            r = ~~(r / count);\n                            g = ~~(g / count);\n                            b = ~~(b / count);\n                            this.options.colorDark = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n                        }\n                        return [3 /*break*/, 4];\n                    case 1:\n                        if (!!!this.options.backgroundImage) return [3 /*break*/, 3];\n                        return [4 /*yield*/, canvas_1.loadImage(this.options.backgroundImage)];\n                    case 2:\n                        backgroundImage = _v.sent();\n                        if (this.options.autoColor) {\n                            avgRGB = AwesomeQR._getAverageRGB(backgroundImage);\n                            this.options.colorDark = \"rgb(\" + avgRGB.r + \",\" + avgRGB.g + \",\" + avgRGB.b + \")\";\n                        }\n                        backgroundCanvasContext.drawImage(backgroundImage, 0, 0, backgroundImage.width, backgroundImage.height, 0, 0, size, size);\n                        backgroundCanvasContext.rect(0, 0, size, size);\n                        backgroundCanvasContext.fillStyle = backgroundDimming;\n                        backgroundCanvasContext.fill();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        backgroundCanvasContext.rect(0, 0, size, size);\n                        backgroundCanvasContext.fillStyle = this.options.colorLight;\n                        backgroundCanvasContext.fill();\n                        _v.label = 4;\n                    case 4:\n                        alignmentPatternCenters = qrcode_1.QRUtil.getPatternPosition(this.qrCode.typeNumber);\n                        dataScale = ((_c = (_b = this.options.components) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.scale) || defaultScale;\n                        dataXyOffset = (1 - dataScale) * 0.5;\n                        for (row = 0; row < nCount; row++) {\n                            for (col = 0; col < nCount; col++) {\n                                bIsDark = this.qrCode.isDark(row, col);\n                                isBlkPosCtr = (col < 8 && (row < 8 || row >= nCount - 8)) || (col >= nCount - 8 && row < 8);\n                                isTiming = (row == 6 && col >= 8 && col <= nCount - 8) || (col == 6 && row >= 8 && row <= nCount - 8);\n                                isProtected = isBlkPosCtr || isTiming;\n                                for (i = 1; i < alignmentPatternCenters.length - 1; i++) {\n                                    isProtected =\n                                        isProtected ||\n                                            (row >= alignmentPatternCenters[i] - 2 &&\n                                                row <= alignmentPatternCenters[i] + 2 &&\n                                                col >= alignmentPatternCenters[i] - 2 &&\n                                                col <= alignmentPatternCenters[i] + 2);\n                                }\n                                nLeft = col * nSize + (isProtected ? 0 : dataXyOffset * nSize);\n                                nTop = row * nSize + (isProtected ? 0 : dataXyOffset * nSize);\n                                mainCanvasContext.strokeStyle = bIsDark ? this.options.colorDark : this.options.colorLight;\n                                mainCanvasContext.lineWidth = 0.5;\n                                mainCanvasContext.fillStyle = bIsDark ? this.options.colorDark : \"rgba(255, 255, 255, 0.6)\";\n                                if (alignmentPatternCenters.length === 0) {\n                                    if (!isProtected) {\n                                        mainCanvasContext.fillRect(nLeft, nTop, (isProtected ? (isBlkPosCtr ? 1 : 1) : dataScale) * nSize, (isProtected ? (isBlkPosCtr ? 1 : 1) : dataScale) * nSize);\n                                    }\n                                }\n                                else {\n                                    inAgnRange = col < nCount - 4 && col >= nCount - 4 - 5 && row < nCount - 4 && row >= nCount - 4 - 5;\n                                    if (!isProtected && !inAgnRange) {\n                                        // if align pattern list is empty, then it means that we don't need to leave room for the align patterns\n                                        mainCanvasContext.fillRect(nLeft, nTop, (isProtected ? (isBlkPosCtr ? 1 : 1) : dataScale) * nSize, (isProtected ? (isBlkPosCtr ? 1 : 1) : dataScale) * nSize);\n                                    }\n                                }\n                            }\n                        }\n                        cornerAlignmentCenter = alignmentPatternCenters[alignmentPatternCenters.length - 1];\n                        protectorStyle = \"rgba(255, 255, 255, 0.6)\";\n                        // - FINDER PROTECTORS\n                        mainCanvasContext.fillStyle = protectorStyle;\n                        mainCanvasContext.fillRect(0, 0, 8 * nSize, 8 * nSize);\n                        mainCanvasContext.fillRect(0, (nCount - 8) * nSize, 8 * nSize, 8 * nSize);\n                        mainCanvasContext.fillRect((nCount - 8) * nSize, 0, 8 * nSize, 8 * nSize);\n                        // - TIMING PROTECTORS\n                        if ((_e = (_d = this.options.components) === null || _d === void 0 ? void 0 : _d.timing) === null || _e === void 0 ? void 0 : _e.protectors) {\n                            mainCanvasContext.fillRect(8 * nSize, 6 * nSize, (nCount - 8 - 8) * nSize, nSize);\n                            mainCanvasContext.fillRect(6 * nSize, 8 * nSize, nSize, (nCount - 8 - 8) * nSize);\n                        }\n                        // - CORNER ALIGNMENT PROTECTORS\n                        if ((_g = (_f = this.options.components) === null || _f === void 0 ? void 0 : _f.cornerAlignment) === null || _g === void 0 ? void 0 : _g.protectors) {\n                            AwesomeQR._drawAlignProtector(mainCanvasContext, cornerAlignmentCenter, cornerAlignmentCenter, nSize);\n                        }\n                        // - ALIGNMENT PROTECTORS\n                        if ((_j = (_h = this.options.components) === null || _h === void 0 ? void 0 : _h.alignment) === null || _j === void 0 ? void 0 : _j.protectors) {\n                            for (i = 0; i < alignmentPatternCenters.length; i++) {\n                                for (j = 0; j < alignmentPatternCenters.length; j++) {\n                                    agnX = alignmentPatternCenters[j];\n                                    agnY = alignmentPatternCenters[i];\n                                    if (agnX === 6 && (agnY === 6 || agnY === cornerAlignmentCenter)) {\n                                        continue;\n                                    }\n                                    else if (agnY === 6 && (agnX === 6 || agnX === cornerAlignmentCenter)) {\n                                        continue;\n                                    }\n                                    else if (agnX === cornerAlignmentCenter && agnY === cornerAlignmentCenter) {\n                                        continue;\n                                    }\n                                    else {\n                                        AwesomeQR._drawAlignProtector(mainCanvasContext, agnX, agnY, nSize);\n                                    }\n                                }\n                            }\n                        }\n                        // - FINDER\n                        mainCanvasContext.fillStyle = this.options.colorDark;\n                        mainCanvasContext.fillRect(0, 0, 7 * nSize, nSize);\n                        mainCanvasContext.fillRect((nCount - 7) * nSize, 0, 7 * nSize, nSize);\n                        mainCanvasContext.fillRect(0, 6 * nSize, 7 * nSize, nSize);\n                        mainCanvasContext.fillRect((nCount - 7) * nSize, 6 * nSize, 7 * nSize, nSize);\n                        mainCanvasContext.fillRect(0, (nCount - 7) * nSize, 7 * nSize, nSize);\n                        mainCanvasContext.fillRect(0, (nCount - 7 + 6) * nSize, 7 * nSize, nSize);\n                        mainCanvasContext.fillRect(0, 0, nSize, 7 * nSize);\n                        mainCanvasContext.fillRect(6 * nSize, 0, nSize, 7 * nSize);\n                        mainCanvasContext.fillRect((nCount - 7) * nSize, 0, nSize, 7 * nSize);\n                        mainCanvasContext.fillRect((nCount - 7 + 6) * nSize, 0, nSize, 7 * nSize);\n                        mainCanvasContext.fillRect(0, (nCount - 7) * nSize, nSize, 7 * nSize);\n                        mainCanvasContext.fillRect(6 * nSize, (nCount - 7) * nSize, nSize, 7 * nSize);\n                        mainCanvasContext.fillRect(2 * nSize, 2 * nSize, 3 * nSize, 3 * nSize);\n                        mainCanvasContext.fillRect((nCount - 7 + 2) * nSize, 2 * nSize, 3 * nSize, 3 * nSize);\n                        mainCanvasContext.fillRect(2 * nSize, (nCount - 7 + 2) * nSize, 3 * nSize, 3 * nSize);\n                        timingScale = ((_l = (_k = this.options.components) === null || _k === void 0 ? void 0 : _k.timing) === null || _l === void 0 ? void 0 : _l.scale) || defaultScale;\n                        timingXyOffset = (1 - timingScale) * 0.5;\n                        for (i = 0; i < nCount - 8; i += 2) {\n                            AwesomeQR._drawDot(mainCanvasContext, 8 + i, 6, nSize, timingXyOffset, timingScale);\n                            AwesomeQR._drawDot(mainCanvasContext, 6, 8 + i, nSize, timingXyOffset, timingScale);\n                        }\n                        cornerAlignmentScale = ((_o = (_m = this.options.components) === null || _m === void 0 ? void 0 : _m.cornerAlignment) === null || _o === void 0 ? void 0 : _o.scale) || defaultScale;\n                        cornerAlignmentXyOffset = (1 - cornerAlignmentScale) * 0.5;\n                        AwesomeQR._drawAlign(mainCanvasContext, cornerAlignmentCenter, cornerAlignmentCenter, nSize, cornerAlignmentXyOffset, cornerAlignmentScale, this.options.colorDark, ((_q = (_p = this.options.components) === null || _p === void 0 ? void 0 : _p.cornerAlignment) === null || _q === void 0 ? void 0 : _q.protectors) || false);\n                        alignmentScale = ((_s = (_r = this.options.components) === null || _r === void 0 ? void 0 : _r.alignment) === null || _s === void 0 ? void 0 : _s.scale) || defaultScale;\n                        alignmentXyOffset = (1 - alignmentScale) * 0.5;\n                        for (i = 0; i < alignmentPatternCenters.length; i++) {\n                            for (j = 0; j < alignmentPatternCenters.length; j++) {\n                                agnX = alignmentPatternCenters[j];\n                                agnY = alignmentPatternCenters[i];\n                                if (agnX === 6 && (agnY === 6 || agnY === cornerAlignmentCenter)) {\n                                    continue;\n                                }\n                                else if (agnY === 6 && (agnX === 6 || agnX === cornerAlignmentCenter)) {\n                                    continue;\n                                }\n                                else if (agnX === cornerAlignmentCenter && agnY === cornerAlignmentCenter) {\n                                    continue;\n                                }\n                                else {\n                                    AwesomeQR._drawAlign(mainCanvasContext, agnX, agnY, nSize, alignmentXyOffset, alignmentScale, this.options.colorDark, ((_u = (_t = this.options.components) === null || _t === void 0 ? void 0 : _t.alignment) === null || _u === void 0 ? void 0 : _u.protectors) || false);\n                                }\n                            }\n                        }\n                        // Fill the margin\n                        if (whiteMargin) {\n                            mainCanvasContext.fillStyle = \"#FFFFFF\";\n                            mainCanvasContext.fillRect(-margin, -margin, size, margin);\n                            mainCanvasContext.fillRect(-margin, viewportSize, size, margin);\n                            mainCanvasContext.fillRect(viewportSize, -margin, margin, size);\n                            mainCanvasContext.fillRect(-margin, -margin, margin, size);\n                        }\n                        if (!!!this.options.logoImage) return [3 /*break*/, 6];\n                        return [4 /*yield*/, canvas_1.loadImage(this.options.logoImage)];\n                    case 5:\n                        logoImage = _v.sent();\n                        logoScale = this.options.logoScale;\n                        logoMargin = this.options.logoMargin;\n                        logoCornerRadius = this.options.logoCornerRadius;\n                        if (logoScale <= 0 || logoScale >= 1.0) {\n                            logoScale = 0.2;\n                        }\n                        if (logoMargin < 0) {\n                            logoMargin = 0;\n                        }\n                        if (logoCornerRadius < 0) {\n                            logoCornerRadius = 0;\n                        }\n                        logoSize = viewportSize * logoScale;\n                        x = 0.5 * (size - logoSize);\n                        y = x;\n                        // Restore the canvas\n                        // After restoring, the top and left margins should be taken into account\n                        mainCanvasContext.restore();\n                        // Clean the area that the logo covers (including margins)\n                        mainCanvasContext.fillStyle = \"#FFFFFF\";\n                        mainCanvasContext.save();\n                        AwesomeQR._prepareRoundedCornerClip(mainCanvasContext, x - logoMargin, y - logoMargin, logoSize + 2 * logoMargin, logoSize + 2 * logoMargin, logoCornerRadius + logoMargin);\n                        mainCanvasContext.clip();\n                        oldGlobalCompositeOperation = mainCanvasContext.globalCompositeOperation;\n                        mainCanvasContext.globalCompositeOperation = \"destination-out\";\n                        mainCanvasContext.fill();\n                        mainCanvasContext.globalCompositeOperation = oldGlobalCompositeOperation;\n                        mainCanvasContext.restore();\n                        // Draw logo image\n                        mainCanvasContext.save();\n                        AwesomeQR._prepareRoundedCornerClip(mainCanvasContext, x, y, logoSize, logoSize, logoCornerRadius);\n                        mainCanvasContext.clip();\n                        mainCanvasContext.drawImage(logoImage, x, y, logoSize, logoSize);\n                        mainCanvasContext.restore();\n                        // Re-translate the canvas to translate the top and left margins into invisible area\n                        mainCanvasContext.save();\n                        mainCanvasContext.translate(margin, margin);\n                        _v.label = 6;\n                    case 6:\n                        if (!!parsedGIFBackground) {\n                            gifFrames.forEach(function (frame) {\n                                if (!gifOutput_1) {\n                                    gifOutput_1 = new GIFEncoder_1.default(rawSize, rawSize);\n                                    gifOutput_1.setDelay(frame.delay);\n                                    gifOutput_1.setRepeat(0);\n                                }\n                                var _a = frame.dims, width = _a.width, height = _a.height;\n                                if (!backgroundCanvas_1) {\n                                    backgroundCanvas_1 = canvas_1.createCanvas(width, height);\n                                    backgroundCanvasContext_1 = backgroundCanvas_1.getContext(\"2d\");\n                                    backgroundCanvasContext_1.rect(0, 0, backgroundCanvas_1.width, backgroundCanvas_1.height);\n                                    backgroundCanvasContext_1.fillStyle = \"#ffffff\";\n                                    backgroundCanvasContext_1.fill();\n                                }\n                                if (!patchCanvas_1 || !patchData_1 || width !== patchCanvas_1.width || height !== patchCanvas_1.height) {\n                                    patchCanvas_1 = canvas_1.createCanvas(width, height);\n                                    patchCanvasContext_1 = patchCanvas_1.getContext(\"2d\");\n                                    patchData_1 = patchCanvasContext_1.createImageData(width, height);\n                                }\n                                patchData_1.data.set(frame.patch);\n                                patchCanvasContext_1.putImageData(patchData_1, 0, 0);\n                                backgroundCanvasContext_1.drawImage(patchCanvas_1, frame.dims.left, frame.dims.top);\n                                var unscaledCanvas = canvas_1.createCanvas(size, size);\n                                var unscaledCanvasContext = unscaledCanvas.getContext(\"2d\");\n                                unscaledCanvasContext.drawImage(backgroundCanvas_1, 0, 0, size, size);\n                                unscaledCanvasContext.rect(0, 0, size, size);\n                                unscaledCanvasContext.fillStyle = backgroundDimming;\n                                unscaledCanvasContext.fill();\n                                unscaledCanvasContext.drawImage(mainCanvas, 0, 0, size, size);\n                                // Scale the final image\n                                var outCanvas = canvas_1.createCanvas(rawSize, rawSize);\n                                var outCanvasContext = outCanvas.getContext(\"2d\");\n                                outCanvasContext.drawImage(unscaledCanvas, 0, 0, rawSize, rawSize);\n                                gifOutput_1.addFrame(outCanvasContext.getImageData(0, 0, outCanvas.width, outCanvas.height).data);\n                            });\n                            if (!gifOutput_1) {\n                                throw new Error(\"No frames.\");\n                            }\n                            gifOutput_1.finish();\n                            if (isElement(this.canvas)) {\n                                u8array = gifOutput_1.stream().toFlattenUint8Array();\n                                binary = u8array.reduce(function (bin, u8) { return bin + String.fromCharCode(u8); }, \"\");\n                                return [2 /*return*/, Promise.resolve(\"data:image/gif;base64,\" + window.btoa(binary))];\n                            }\n                            return [2 /*return*/, Promise.resolve(Buffer.from(gifOutput_1.stream().toFlattenUint8Array()))];\n                        }\n                        else {\n                            // Swap and merge the foreground and the background\n                            backgroundCanvasContext.drawImage(mainCanvas, 0, 0, size, size);\n                            mainCanvasContext.drawImage(backgroundCanvas, -margin, -margin, size, size);\n                            outCanvas = canvas_1.createCanvas(rawSize, rawSize);\n                            outCanvasContext = outCanvas.getContext(\"2d\");\n                            outCanvasContext.drawImage(mainCanvas, 0, 0, rawSize, rawSize);\n                            this.canvas = outCanvas;\n                            if (isElement(this.canvas)) {\n                                return [2 /*return*/, Promise.resolve(this.canvas.toDataURL())];\n                            }\n                            return [2 /*return*/, Promise.resolve(this.canvas.toBuffer())];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AwesomeQR.CorrectLevel = qrcode_1.QRErrorCorrectLevel;\n    AwesomeQR.defaultComponentOptions = {\n        data: {\n            scale: 0.4,\n        },\n        timing: {\n            scale: 0.5,\n            protectors: false,\n        },\n        alignment: {\n            scale: 0.5,\n            protectors: false,\n        },\n        cornerAlignment: {\n            scale: 0.5,\n            protectors: true,\n        },\n    };\n    AwesomeQR.defaultOptions = {\n        text: \"\",\n        size: 400,\n        margin: 20,\n        colorDark: \"#000000\",\n        colorLight: \"#ffffff\",\n        correctLevel: qrcode_1.QRErrorCorrectLevel.M,\n        backgroundImage: undefined,\n        backgroundDimming: \"rgba(0,0,0,0)\",\n        logoImage: undefined,\n        logoScale: 0.2,\n        logoMargin: 4,\n        logoCornerRadius: 8,\n        whiteMargin: true,\n        components: AwesomeQR.defaultComponentOptions,\n        autoColor: true,\n    };\n    return AwesomeQR;\n}());\nexports.AwesomeQR = AwesomeQR;\nfunction isElement(obj) {\n    try {\n        //Using W3 DOM2 (works for FF, Opera and Chrome)\n        return obj instanceof HTMLElement;\n    }\n    catch (e) {\n        //Browsers not supporting W3 DOM2 don't have HTMLElement and\n        //an exception is thrown and we end up here. Testing some\n        //properties that all elements have (works on IE7)\n        return (typeof obj === \"object\" &&\n            obj.nodeType === 1 &&\n            typeof obj.style === \"object\" &&\n            typeof obj.ownerDocument === \"object\");\n    }\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./qrcode\"), exports);\nvar awesome_qr_1 = require(\"./awesome-qr\");\nObject.defineProperty(exports, \"AwesomeQR\", { enumerable: true, get: function () { return awesome_qr_1.AwesomeQR; } });\n","<svelte:options tag=\"crypto-wallet-widget\" />\n\n<script lang=\"ts\">\n  import { AwesomeQR, Options as QRCodeOptions } from \"awesome-qr\";\n\n  let dataURL: string;\n\n  /* Props */\n  export let currency: string | undefined;\n  export let walletAddress: string = $$props[\"wallet-address\"];\n  export let walletAddressColor: string =\n    $$props[\"wallet-address-color\"] ?? $$props[\"wallet-address-colour\"] ?? \"currentColor\";\n  export let icon: string | undefined;\n  /* QR-Code */\n  export let qrCodeSize: number = $$props[\"qr-code-size\"] ?? 300;\n  export let qrCodeDotColor: string | undefined = $$props[\"qr-code-dot-color\"];\n  export let qrCodeDotScale: number = $$props[\"qr-code-dot-scale\"] ?? 1;\n  export let qrCodeBackgroundColor: string | undefined = $$props[\"qr-code-background-color\"];\n  export let qrCodeLogoImage: string | undefined = $$props[\"qr-code-logo-image\"];\n  export let qrCodeLogoScale: number | undefined = $$props[\"qr-code-logo-scale\"] ?? 0.3;\n  export let qrCodeLogoMargin: number | undefined = $$props[\"qr-code-logo-margin\"] ?? 5;\n  export let qrCodeLogoCornerRadius: number | undefined =\n    $$props[\"qr-code-logo-corner-radius\"] ?? 40;\n  $: getQRCodeDataURL(walletAddress).then((url) => (dataURL = url));\n\n  async function getDataURLFromImage(url: string): Promise<string> {\n    const blob = await fetch(url).then((r) => r.blob());\n    return await new Promise((resolve) => {\n      let reader = new FileReader();\n      reader.onload = () => resolve(reader.result.toString());\n      reader.readAsDataURL(blob);\n    });\n  }\n\n  async function getQRCodeDataURL(text: string): Promise<string> {\n    if (!text) return;\n\n    const options: Partial<QRCodeOptions> = {\n      components: {\n        data: {\n          scale: qrCodeDotScale,\n        },\n        timing: {\n          scale: qrCodeDotScale + 0.1,\n          protectors: false,\n        },\n        alignment: {\n          scale: qrCodeDotScale + 0.1,\n          protectors: false,\n        },\n        cornerAlignment: {\n          scale: qrCodeDotScale + 0.1,\n          protectors: true,\n        },\n      },\n    };\n\n    options.text = text;\n\n    if (qrCodeSize) options.size = qrCodeSize;\n    if (qrCodeDotColor) options.colorDark = qrCodeDotColor;\n    if (qrCodeBackgroundColor) options.colorLight = qrCodeBackgroundColor;\n    if (qrCodeLogoImage) options.logoImage = await getDataURLFromImage(qrCodeLogoImage);\n    if (qrCodeLogoScale) options.logoScale = qrCodeLogoScale;\n    if (qrCodeLogoMargin) options.logoMargin = qrCodeLogoMargin;\n    if (qrCodeLogoCornerRadius) options.logoCornerRadius = qrCodeLogoCornerRadius;\n\n    return new Promise((resolve) => {\n      new AwesomeQR(options).draw().then((dataURL) => {\n        resolve(dataURL.toString());\n      });\n    });\n  }\n\n  let popupActive = false;\n  let showCopied = false;\n\n  async function copyWalletAddressToClipboard() {\n    await navigator.clipboard.writeText(walletAddress);\n    showCopied = true;\n    setTimeout(() => {\n      showCopied = false;\n    }, 3000);\n  }\n</script>\n\n<div class=\"crypto-wallet-widget\">\n  {#if walletAddress}\n    <div class=\"widget-content\">\n      {#if icon}\n        <img src={icon} alt=\"Crypto wallet widget by Dan6erbond\" class=\"icon-img flex-shrink-0\" />\n      {/if}\n      <div class=\"main-txt\">\n        {#if currency}\n          <span class=\"currency\">{currency}</span>\n        {/if}\n        <span class=\"wallet-address\" style={`color: ${walletAddressColor}`}>{walletAddress}</span>\n      </div>\n      <div class=\"flex-grow\" />\n      <button class=\"copy-btn flex-shrink-0\" on:click={copyWalletAddressToClipboard}>\n        <span class=\"copied-txt\" class:active={showCopied}>Copied!</span>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\"\n          />\n        </svg>\n      </button>\n      <button class=\"qrcode-btn flex-shrink-0\" on:click={() => (popupActive = true)}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\"\n          />\n        </svg>\n      </button>\n    </div>\n    <div class=\"popup\" class:active={popupActive} on:click={() => (popupActive = false)}>\n      <img src={dataURL} class=\"qrcode-preview\" alt=\"Crypto wallet widget by Dan6erbond\" />\n    </div>\n  {/if}\n</div>\n\n<style>\n  .crypto-wallet-widget .widget-content {\n    display: flex;\n    align-items: center;\n    flex-wrap: nowrap;\n  }\n\n  .icon-img {\n    height: 2rem;\n    width: 2rem;\n    margin-right: 0.5rem;\n  }\n\n  .copy-btn,\n  .qrcode-btn {\n    cursor: pointer;\n    padding: 0;\n    border: none;\n    background: none;\n    margin-left: 0.5rem;\n    color: currentColor;\n    display: flex;\n    align-items: center;\n  }\n\n  .copy-btn svg,\n  .qrcode-btn svg {\n    height: 1.75rem;\n    width: 1.75rem;\n  }\n\n  .copied-txt {\n    display: none;\n    margin-right: 0.5rem;\n  }\n\n  .copied-txt.active {\n    display: block;\n  }\n\n  .popup {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 1;\n    visibility: hidden;\n    opacity: 0;\n    transition: opacity 0.25s linear;\n  }\n\n  .popup.active {\n    visibility: visible;\n    opacity: 1;\n    transition: visibility 0.25s linear, opacity 0.25s linear;\n  }\n\n  .flex-grow {\n    flex-grow: 1;\n  }\n\n  .flex-1 {\n    flex: 1;\n  }\n\n  .flex-shrink-0 {\n    flex-shrink: 0;\n  }\n\n  .main-txt {\n    flex-shrink: 1;\n    min-width: 0;\n  }\n\n  .main-txt .currency {\n    font-size: 1.25rem;\n    display: flex;\n    flex-direction: column;\n    min-width: 0;\n  }\n\n  .main-txt .wallet-address {\n    overflow-wrap: break-word;\n    text-overflow: ellipsis;\n    min-width: 0;\n  }\n</style>\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","toggle_class","toggle","classList","attribute_to_object","attributes","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","i","length","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_mount","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","SvelteElement","HTMLElement","constructor","super","this","attachShadow","mode","connectedCallback","key","slotted","attributeChangedCallback","_oldValue","newValue","disconnectedCallback","$destroy","detaching","d","destroy_component","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","_getUTF8Length","sText","replacedText","encodeURI","toString","replace","Number","defineProperty","exports","QR8bitByte","QRMode","MODE_8BIT_BYTE","parsedData","byteArrays","byteArray","code","charCodeAt","prototype","concat","apply","unshift","getLength","write","buffer","put","QRCodeModel","typeNumber","errorCorrectLevel","QRErrorCorrectLevel","L","moduleCount","dataList","addData","nCorrectLevel","nType","len","QRCodeLimitLength","nLimit","M","Q","H","Error","_getTypeNumber","version","checkQRVersion","newData","dataCache","undefined","isDark","row","col","modules","getModuleCount","make","makeImpl","getBestMaskPattern","test","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","isInteger","values","QRMaskPattern","includes","minLostPoint","pattern","lostPoint","QRUtil","getLostPoint","pos","getPatternPosition","j","bits","getBCHTypeNumber","mod","Math","floor","getBCHTypeInfo","inc","bitIndex","byteIndex","dark","getMask","rsBlocks","QRRSBlock","getRSBlocks","QRBitBuffer","getLengthInBits","totalDataCount","dataCount","putBit","PAD0","PAD1","createBytes","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","modPoly","QRPolynomial","modIndex","get","totalCodeCount","MODE_NUMBER","MODE_ALPHA_NUM","MODE_KANJI","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","getBCHDigit","G15","G15_MASK","G18","digit","PATTERN_POSITION_TABLE","errorCorrectLength","multiply","QRMath","gexp","qrCode","sameCount","count","darkCount","abs","glog","n","LOG_TABLE","EXP_TABLE","_constructor","num","shift","e","ratio","rsBlock","getRsBlockTable","list","RS_BLOCK_TABLE","bufIndex","bit","string","RegExp","width","height","reject","image","cleanup","onload","onerror","parse","stream","schema","arguments","parent","isArray","partSchema","conditionFunc","continueFunc","arr","newParent","uint8Data","readByte","readBytes","subarray","String","fromCharCode","join","littleEndian","bytes","byteSize","totalOrFunc","total","parser","_byte","reduce","res","def","startIndex","pow","subBitsTotal","subBlocksSchema","blocks","chunks","streamSize","size","_uint","availableSize","Uint8Array","set","gceSchema","_","conditional","gce","codes","extras","readBits","future","disposal","userInput","transparentColorGiven","delay","readUnsigned","transparentColorIndex","terminator","peekBytes","imageSchema","descriptor","left","top","lct","exists","interlaced","sort","readArray","minCodeSize","peekByte","textSchema","blockSize","preData","applicationSchema","application","id","readString","commentSchema","comment","_default","header","signature","lsd","gct","resolution","backgroundColorIndex","pixelAspectRatio","frames","loop","nextCode","pixels","newPixels","rows","cpRow","toRow","fromRow","fromPixels","slice","offsets","steps","pass","pixelCount","available","code_mask","code_size","end_of_information","in_code","old_code","data_size","datum","first","pi","bi","MAX_STACK_SIZE","npix","dstPixels","prefix","suffix","pixelStack","__importDefault","__esModule","default","gif_1","require$$0","arrayBuffer","byteData","js_binary_schema_parser_1","uint8_1","buildStream","frame","buildImagePatch","totalPixels","lzw_1","lzw","deinterlace_1","deinterlace","resultImage","dims","colorTable","disposalType","transparentIndex","patch","patchData","Uint8ClampedArray","colorIndex","color","generatePatch","console","warn","parsedGif","buildImagePatches","f","decompressFrame","netsize","initalpha","alpharadbias","samplefac","network","netindex","bias","freq","radpower","altersingle","alpha","g","alterneigh","radius","lo","hi","min","contest","dist","biasdist","betafreq","bestd","bestbiasd","bestpos","bestbiaspos","buildColormap","v","Int32Array","Float64Array","intbias","step","lengthcount","alphadec","samplepixels","delta","rad","pix","learn","unbiasnet","q","smallpos","smallval","previouscol","startpos","inxbuild","getColormap","lookupRGB","best","HSIZE","masks","colorDepth","cur_accum","a_count","maxcode","g_init_bits","ClearCode","EOFCode","remaining","curPixel","n_bits","initCodeSize","accum","htab","codetab","cur_bits","free_ent","clear_flg","char_out","outs","flush_char","cl_block","cl_hash","output","hsize","writeByte","writeBytes","MAXCODE","nextPixel","encode","init_bits","fcode","ent","disp","hsize_reg","hshift","outer_loop","compress","ByteArray","page","pages","newPage","pageSize","charMap","GIFEncoder","transparent","transIndex","repeat","indexedPixels","colorTab","neuQuant","usedEntry","palSize","dispose","firstFrame","sample","dither","globalPalette","out","cursor","getData","rv","toFlattenUint8Array","chunk","flatten","acc","lastLength","val","writeUTFBytes","array","setDelay","milliseconds","round","setFrameRate","fps","setDispose","disposalCode","setRepeat","setTransparent","addFrame","imageData","getImagePixels","analyzePixels","writeHeader","writeLSD","writePalette","writeNetscapeExt","writeGraphicCtrlExt","writeImageDesc","writePixels","finish","setQuality","quality","setDither","setGlobalPalette","palette","getGlobalPalette","NeuQuant","ditherPixels","match","indexPixels","findClosest","imgq","nPix","findClosestRGB","kernel","serpentine","kernels","FalseFloydSteinberg","FloydSteinberg","Stucki","Atkinson","ds","direction","y","x","xend","idx","r1","g1","b1","er","eg","eb","end","x1","y1","used","minpos","dmin","dr","dg","db","w","h","srcPos","transp","writeShort","pValue","LZWEncoder","__assign","t","s","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","fulfilled","next","rejected","done","__generator","body","label","sent","trys","ops","verb","throw","return","Symbol","iterator","op","TypeError","GIFEncoder_1","defaultScale","AwesomeQR","_options","defaultOptions","enumerable","writable","components","defaultComponentOptions","dotScale","scale","timing","alignment","canvas","canvas_1","canvasContext","getContext","qrcode_1","correctLevel","draw","_this","_draw","_clear","clearRect","_prepareRoundedCornerClip","beginPath","moveTo","arcTo","closePath","_getAverageRGB","defaultRGB","rgb","naturalHeight","naturalWidth","drawImage","getImageData","_drawDot","centerX","centerY","nSize","xyOffset","fillRect","_drawAlignProtector","_drawAlign","colorDark","hasProtector","oldFillStyle","fillStyle","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","nCount","rawSize","rawMargin","margin","rawViewportSize","whiteMargin","backgroundDimming","viewportSize","mainCanvas","mainCanvasContext","backgroundCanvas","backgroundCanvasContext","parsedGIFBackground","gifFrames","gif","backgroundImage","avgRGB","alignmentPatternCenters","dataScale","dataXyOffset","bIsDark","isTiming","isProtected","nLeft","nTop","inAgnRange","cornerAlignmentCenter","timingScale","timingXyOffset","cornerAlignmentScale","cornerAlignmentXyOffset","alignmentScale","alignmentXyOffset","agnX","agnY","logoImage","logoScale","logoMargin","logoCornerRadius","logoSize","oldGlobalCompositeOperation","gifOutput_1","backgroundCanvas_1","backgroundCanvasContext_1","patchCanvas_1","patchCanvasContext_1","patchData_1","u8array","binary","outCanvas","_v","ceil","save","translate","gifBackground","gifuct_js_1","parseGIF","decompressFrames","autoColor","rect","colorLight","strokeStyle","lineWidth","protectors","cornerAlignment","restore","clip","globalCompositeOperation","createImageData","putImageData","unscaledCanvas","unscaledCanvasContext","outCanvasContext","isElement","bin","u8","window","btoa","Buffer","toDataURL","toBuffer","CorrectLevel","nodeType","style","ownerDocument","__createBinding","o","k2","__exportStar","awesome_qr_1","dataURL","currency","walletAddress","walletAddressColor","icon","qrCodeSize","qrCodeDotColor","qrCodeDotScale","qrCodeBackgroundColor","qrCodeLogoImage","qrCodeLogoScale","qrCodeLogoMargin","qrCodeLogoCornerRadius","getQRCodeDataURL","blob","fetch","reader","FileReader","readAsDataURL","getDataURLFromImage","popupActive","showCopied","navigator","clipboard","writeText","setTimeout"],"mappings":"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AI,GAAI,EAAG,GAAI,IACnB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,GAAI,EAAG,IAAK,IACrB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,IAAK,GAAI,EAAG,IAAK,IACrB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,KACV,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,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"}